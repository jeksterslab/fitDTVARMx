[{"path":"https://github.com/jeksterslab/fitDTVARMx/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Ivan Jacob Agaloos Pesigan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/fitDTVARMx.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"fitDTVARMx: Fit the Discrete-Time Vector Autoregressive Model","text":"Fit discrete-time vector autoregressive model using OpenMx package.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/fitDTVARMx.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"fitDTVARMx: Fit the Discrete-Time Vector Autoregressive Model","text":"can install released version fitDTVARMx GitHub :","code":"if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"jeksterslab/fitDTVARMx\")"},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/fitDTVARMx.html","id":"more-information","dir":"Articles","previous_headings":"","what":"More Information","title":"fitDTVARMx: Fit the Discrete-Time Vector Autoregressive Model","text":"See GitHub Pages package documentation. See Quarto Pub package wiki resources.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-1-fixed.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 1)","text":"measurement model given 𝐲i,t=𝛈i,t\\begin{equation}   \\mathbf{y}_{, t}   =   \\boldsymbol{\\eta}_{, t} \\end{equation} 𝐲i,t\\mathbf{y}_{, t} represents vector observed variables 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent variables individual ii time tt. dynamic structure given 𝛈i,t=𝛃𝛈i,t−1+𝛇i,t,with𝛇i,t∼𝒩(𝟎,𝚿)\\begin{equation}   \\boldsymbol{\\eta}_{, t}   =   \\boldsymbol{\\beta}   \\boldsymbol{\\eta}_{, t - 1}   +   \\boldsymbol{\\zeta}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\zeta}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Psi}   \\right) \\end{equation} 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1}, 𝛇i,t\\boldsymbol{\\zeta}_{, t} random variables, 𝛃\\boldsymbol{\\beta}, 𝚿\\boldsymbol{\\Psi} model parameters. , 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent variables time tt individual ii, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1} represents vector latent variables time t−1t - 1 individual ii, 𝛇i,t\\boldsymbol{\\zeta}_{, t} represents vector dynamic noise time tt individual ii. 𝛃\\boldsymbol{\\beta} denotes matrix autoregression cross regression coefficients, 𝚿\\boldsymbol{\\Psi} covariance matrix 𝛇i,t\\boldsymbol{\\zeta}_{, t}. model, 𝚿\\boldsymbol{\\Psi} diagonal matrix.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-1-fixed.html","id":"notation","dir":"Articles","previous_headings":"Data Generation","what":"Notation","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 1)","text":"Let t=1000t = 1000 number time points n=100n = 100 number individuals. Let initial condition 𝛈0\\boldsymbol{\\eta}_{0} given 𝛈0∼𝒩(𝛍𝛈∣0,𝚺𝛈∣0)\\begin{equation} \\boldsymbol{\\eta}_{0} \\sim \\mathcal{N} \\left( \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}, \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} \\right) \\end{equation} 𝛍𝛈∣0=(000)\\begin{equation} \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) \\end{equation} 𝚺𝛈∣0=(100010001).\\begin{equation} \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let transition matrix 𝛃\\boldsymbol{\\beta} given 𝛃=(0.7000.50.60−0.10.40.5).\\begin{equation} \\boldsymbol{\\beta} = \\left( \\begin{array}{ccc}   0.7 & 0 & 0 \\\\   0.5 & 0.6 & 0 \\\\   -0.1 & 0.4 & 0.5 \\\\ \\end{array} \\right) . \\end{equation} Let dynamic process noise 𝚿\\boldsymbol{\\Psi} given 𝚿=(0.10000.10000.1).\\begin{equation} \\boldsymbol{\\Psi} = \\left( \\begin{array}{ccc}   0.1 & 0 & 0 \\\\   0 & 0.1 & 0 \\\\   0 & 0 & 0.1 \\\\ \\end{array} \\right) . \\end{equation}","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-1-fixed.html","id":"r-function-arguments","dir":"Articles","previous_headings":"Data Generation","what":"R Function Arguments","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 1)","text":"","code":"n #> [1] 100 time #> [1] 1000 mu0 #> [1] 0 0 0 sigma0 #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 sigma0_l #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 alpha #> [1] 0 0 0 beta #>      [,1] [,2] [,3] #> [1,]  0.7  0.0  0.0 #> [2,]  0.5  0.6  0.0 #> [3,] -0.1  0.4  0.5 psi #>      [,1] [,2] [,3] #> [1,]  0.1  0.0  0.0 #> [2,]  0.0  0.1  0.0 #> [3,]  0.0  0.0  0.1 psi_l #>           [,1]      [,2]      [,3] #> [1,] 0.3162278 0.0000000 0.0000000 #> [2,] 0.0000000 0.3162278 0.0000000 #> [3,] 0.0000000 0.0000000 0.3162278"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-1-fixed.html","id":"using-the-simssmvarfixed-function-from-the-simstatespace-package-to-simulate-data","dir":"Articles","previous_headings":"Data Generation","what":"Using the SimSSMVARFixed Function from the simStateSpace Package to Simulate Data","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 1)","text":"","code":"library(simStateSpace) sim <- SimSSMVARFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l ) data <- as.data.frame(sim) head(data) #>   id time          y1         y2           y3 #> 1  1    0 -0.42009090 -0.2340943  0.307329996 #> 2  1    1  0.08188521 -0.8844292  0.556177760 #> 3  1    2  0.04695228 -0.7506432  0.037108605 #> 4  1    3  0.32373035 -0.4432620 -0.382034705 #> 5  1    4 -0.14906132 -0.3897444 -0.736510205 #> 6  1    5 -0.38126798 -0.2523750  0.005946284 plot(sim)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-1-fixed.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 1)","text":"DTVAR function fits DT-VAR model assuming fixed parameters using byid = FALSE argument.","code":"library(fitDTVARMx) DTVAR(   data = data,   observed = paste0(\"y\", seq_len(k)),   id = \"id\",   model = 1,   byid = FALSE,   ncores = parallel::detectCores() ) #> Running DTVAR with 12 parameters #>  #> Beginning initial fit attempt #> Running DTVAR with 12 parameters #>  #>  Lowest minimum so far:  161039.811694934 #>  #> Solution found #>  #>  Solution found!  Final fit=161039.81 (started at 557941.17)  (1 attempt(s): 1 valid, 0 errors) #>  Start values from best fit: #> 0.698246492812554,0.498583301246745,-0.101115903036828,-0.000998116359015136,0.602045350258964,0.401558877647742,0.00479802020531404,-0.00378028100285481,0.499300186783842,0.100179544689319,0.0996669845545017,0.0998790044443722 #> Summary of DTVAR  #>   #> free parameters: #>       name       matrix  row  col      Estimate    Std.Error A #> 1  beta_11 DTVAR_1.beta eta1 eta1  0.6982464928 0.0025391568   #> 2  beta_21 DTVAR_1.beta eta2 eta1  0.4985833012 0.0025372039   #> 3  beta_31 DTVAR_1.beta eta3 eta1 -0.1011159030 0.0025405888   #> 4  beta_12 DTVAR_1.beta eta1 eta2 -0.0009981164 0.0021375422   #> 5  beta_22 DTVAR_1.beta eta2 eta2  0.6020453503 0.0021333402   #> 6  beta_32 DTVAR_1.beta eta3 eta2  0.4015588776 0.0021398312   #> 7  beta_13 DTVAR_1.beta eta1 eta3  0.0047980202 0.0021807234   #> 8  beta_23 DTVAR_1.beta eta2 eta3 -0.0037802810 0.0021747033   #> 9  beta_33 DTVAR_1.beta eta3 eta3  0.4993001868 0.0021767150   #> 10  psi_11  DTVAR_1.psi eta1 eta1  0.1001795447 0.0004484372   #> 11  psi_22  DTVAR_1.psi eta2 eta2  0.0996669846 0.0004461657   #> 12  psi_33  DTVAR_1.psi eta3 eta3  0.0998790044 0.0004471070   #>                  lbound ubound #> 1                              #> 2                              #> 3                              #> 4                              #> 5                              #> 6                              #> 7                              #> 8                              #> 9                              #> 10 2.2250738585072e-308        #> 11 2.2250738585072e-308        #> 12 2.2250738585072e-308        #>  #> Model Statistics:  #>                |  Parameters  |  Degrees of Freedom  |  Fit (-2lnL units) #>        Model:             12                 299988              161039.8 #>    Saturated:             NA                     NA                    NA #> Independence:             NA                     NA                    NA #> Number of observations/statistics: 1e+05/3e+05 #>  #> Information Criteria:  #>       |  df Penalty  |  Parameters Penalty  |  Sample-Size Adjusted #> AIC:      -438936.2               161063.8                 161063.8 #> BIC:     -3292699.7               161178.0                 161139.8 #> CFI: NA  #> TLI: 1   (also known as NNFI)  #> RMSEA:  0  [95% CI (NA, NA)] #> Prob(RMSEA <= 0.05): NA #> To get additional fit indices, see help(mxRefModels) #> timestamp: 2024-09-21 21:21:52  #> Wall clock time: 144.0279 secs  #> optimizer:  SLSQP  #> OpenMx version number: 2.21.12  #> Need help?  See help(mxSummary)"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-1-id-random.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 1)","text":"measurement model given 𝐲i,t=𝛈i,t\\begin{equation}   \\mathbf{y}_{, t}   =   \\boldsymbol{\\eta}_{, t} \\end{equation} 𝐲i,t\\mathbf{y}_{, t} represents vector observed variables 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent variables individual ii time tt. dynamic structure given 𝛈i,t=𝛃𝛈i,t−1+𝛇i,t,with𝛇i,t∼𝒩(𝟎,𝚿)\\begin{equation}   \\boldsymbol{\\eta}_{, t}   =   \\boldsymbol{\\beta}   \\boldsymbol{\\eta}_{, t - 1}   +   \\boldsymbol{\\zeta}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\zeta}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Psi}   \\right) \\end{equation} 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1}, 𝛇i,t\\boldsymbol{\\zeta}_{, t} random variables, 𝛃\\boldsymbol{\\beta}, 𝚿\\boldsymbol{\\Psi} model parameters. , 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent variables time tt individual ii, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1} represents vector latent variables time t−1t - 1 individual ii, 𝛇i,t\\boldsymbol{\\zeta}_{, t} represents vector dynamic noise time tt individual ii. 𝛃\\boldsymbol{\\beta} denotes matrix autoregression cross regression coefficients, 𝚿\\boldsymbol{\\Psi} covariance matrix 𝛇i,t\\boldsymbol{\\zeta}_{, t}. model, 𝚿\\boldsymbol{\\Psi} diagonal matrix.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-1-id-random.html","id":"notation","dir":"Articles","previous_headings":"Data Generation","what":"Notation","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 1)","text":"Let t=1000t = 1000 number time points n=100n = 100 number individuals. Let initial condition 𝛈0\\boldsymbol{\\eta}_{0} given 𝛈0∼𝒩(𝛍𝛈∣0,𝚺𝛈∣0)\\begin{equation} \\boldsymbol{\\eta}_{0} \\sim \\mathcal{N} \\left( \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}, \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} \\right) \\end{equation} 𝛍𝛈∣0=(000)\\begin{equation} \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) \\end{equation} 𝚺𝛈∣0=(100010001).\\begin{equation} \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let transition matrix 𝛃\\boldsymbol{\\beta} normally distributed following means (0.7000.50.60−0.10.40.5)\\begin{equation} \\left( \\begin{array}{ccc}   0.7 & 0 & 0 \\\\   0.5 & 0.6 & 0 \\\\   -0.1 & 0.4 & 0.5 \\\\ \\end{array} \\right) \\end{equation} covariance matrix (0.010000000000.010000000000.010000000000.010000000000.010000000000.010000000000.010000000000.010000000000.01).\\begin{equation} \\left( \\begin{array}{ccc}   0.01 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0.01 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0.01 & 0 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0.01 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0.01 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0.01 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0 & 0.01 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0 & 0 & 0.01 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0.01 \\\\ \\end{array} \\right) . \\end{equation} SimBetaN function simStateSpace package generates random transition matrices multivariate normal distribution. Note function generates transition matrices weakly stationary. Let dynamic process noise 𝚿\\boldsymbol{\\Psi} given 𝚿=(0.10000.10000.1).\\begin{equation} \\boldsymbol{\\Psi} = \\left( \\begin{array}{ccc}   0.1 & 0 & 0 \\\\   0 & 0.1 & 0 \\\\   0 & 0 & 0.1 \\\\ \\end{array} \\right) . \\end{equation}","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-1-id-random.html","id":"r-function-arguments","dir":"Articles","previous_headings":"Data Generation","what":"R Function Arguments","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 1)","text":"","code":"n #> [1] 100 time #> [1] 1000 mu0 #> [[1]] #> [1] 0 0 0 sigma0 #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 sigma0_l #> [[1]] #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 alpha #> [[1]] #> [1] 0 0 0 # first beta in the list of length n beta[[1]] #>           [,1]       [,2]       [,3] #> [1,] 0.6468498 0.02987347 0.09881764 #> [2,] 0.5821253 0.64048586 0.12907652 #> [3,] 0.1217450 0.33748281 0.46598132 psi #>      [,1] [,2] [,3] #> [1,]  0.1  0.0  0.0 #> [2,]  0.0  0.1  0.0 #> [3,]  0.0  0.0  0.1 psi_l #> [[1]] #>           [,1]      [,2]      [,3] #> [1,] 0.3162278 0.0000000 0.0000000 #> [2,] 0.0000000 0.3162278 0.0000000 #> [3,] 0.0000000 0.0000000 0.3162278"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-1-id-random.html","id":"using-the-simssmvarivary-function-from-the-simstatespace-package-to-simulate-data","dir":"Articles","previous_headings":"Data Generation","what":"Using the SimSSMVARIVary Function from the simStateSpace Package to Simulate Data","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 1)","text":"","code":"library(simStateSpace) sim <- SimSSMVARIVary(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l ) data <- as.data.frame(sim) head(data) #>   id time          y1         y2         y3 #> 1  1    0 -0.49056396 -0.3253768  1.0523744 #> 2  1    1  0.14521966 -0.7006281  0.2457437 #> 3  1    2 -0.07512888 -0.9727582 -0.3760374 #> 4  1    3 -0.08732419 -1.0571249 -0.4137884 #> 5  1    4  0.08986589 -1.0002725 -0.1981683 #> 6  1    5 -0.06217825 -0.5922683 -0.4385412 plot(sim)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-1-id-random.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 1)","text":"DTVAR function fits DT-VAR model individual ii using byid = TRUE argument.","code":"library(fitDTVARMx) DTVAR(   data = data,   observed = paste0(\"y\", seq_len(k)),   id = \"id\",   model = 1,   byid = TRUE,   ncores = parallel::detectCores() ) #>  #> Means of the estimated paramaters per individual. #>      beta_11      beta_21      beta_31      beta_12      beta_22      beta_32  #>  0.681708156  0.490648463 -0.095598357 -0.004552304  0.585829938  0.385393184  #>      beta_13      beta_23      beta_33       psi_11       psi_22       psi_33  #>  0.009392707 -0.012720822  0.492579348  0.099902461  0.099408893  0.099638018"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-2-fixed.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 2)","text":"measurement model given 𝐲i,t=𝚲𝛈i,t+𝛆i,t,with𝛆i,t∼𝒩(𝟎,𝚯)\\begin{equation}   \\mathbf{y}_{, t}   =   \\boldsymbol{\\Lambda}   \\boldsymbol{\\eta}_{, t}   +   \\boldsymbol{\\varepsilon}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\varepsilon}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Theta}   \\right) \\end{equation} 𝐲i,t\\mathbf{y}_{, t}, 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} random variables 𝚲\\boldsymbol{\\Lambda}, 𝚯\\boldsymbol{\\Theta} model parameters. 𝐲i,t\\mathbf{y}_{, t} represents vector observed random variables, 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent random variables, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} vector random measurement errors, time tt individual ii. 𝚲\\boldsymbol{\\Lambda} denotes matrix factor loadings, 𝚯\\boldsymbol{\\Theta} covariance matrix 𝛆\\boldsymbol{\\varepsilon}. model, 𝚲\\boldsymbol{\\Lambda} identity matrix 𝚯\\boldsymbol{\\Theta} diagonal matrix. dynamic structure given 𝛈i,t=𝛃𝛈i,t−1+𝛇i,t,with𝛇i,t∼𝒩(𝟎,𝚿)\\begin{equation}   \\boldsymbol{\\eta}_{, t}   =   \\boldsymbol{\\beta}   \\boldsymbol{\\eta}_{, t - 1}   +   \\boldsymbol{\\zeta}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\zeta}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Psi}   \\right) \\end{equation} 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1}, 𝛇i,t\\boldsymbol{\\zeta}_{, t} random variables, 𝛃\\boldsymbol{\\beta}, 𝚿\\boldsymbol{\\Psi} model parameters. , 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent variables time tt individual ii, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1} represents vector latent variables time t−1t - 1 individual ii, 𝛇i,t\\boldsymbol{\\zeta}_{, t} represents vector dynamic noise time tt individual ii. 𝛃\\boldsymbol{\\beta} denotes matrix autoregression cross regression coefficients, 𝚿\\boldsymbol{\\Psi} covariance matrix 𝛇i,t\\boldsymbol{\\zeta}_{, t}. model, 𝚿\\boldsymbol{\\Psi} diagonal matrix.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-2-fixed.html","id":"notation","dir":"Articles","previous_headings":"Data Generation","what":"Notation","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 2)","text":"Let t=1000t = 1000 number time points n=100n = 100 number individuals. Let measurement model intecept vector 𝛎\\boldsymbol{\\nu} given 𝛎=(000).\\begin{equation} \\boldsymbol{\\nu} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) . \\end{equation} Let factor loadings matrix 𝚲\\boldsymbol{\\Lambda} given 𝚲=(100010001).\\begin{equation} \\boldsymbol{\\Lambda} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let measurement error covariance matrix 𝚯\\boldsymbol{\\Theta} given 𝚯=(0.20000.20000.2).\\begin{equation} \\boldsymbol{\\Theta} = \\left( \\begin{array}{ccc}   0.2 & 0 & 0 \\\\   0 & 0.2 & 0 \\\\   0 & 0 & 0.2 \\\\ \\end{array} \\right) . \\end{equation} Let initial condition 𝛈0\\boldsymbol{\\eta}_{0} given 𝛈0∼𝒩(𝛍𝛈∣0,𝚺𝛈∣0)\\begin{equation} \\boldsymbol{\\eta}_{0} \\sim \\mathcal{N} \\left( \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}, \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} \\right) \\end{equation} 𝛍𝛈∣0=(000)\\begin{equation} \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) \\end{equation} 𝚺𝛈∣0=(100010001).\\begin{equation} \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let transition matrix 𝛃\\boldsymbol{\\beta} given 𝛃=(0.7000.50.60−0.10.40.5).\\begin{equation} \\boldsymbol{\\beta} = \\left( \\begin{array}{ccc}   0.7 & 0 & 0 \\\\   0.5 & 0.6 & 0 \\\\   -0.1 & 0.4 & 0.5 \\\\ \\end{array} \\right) . \\end{equation} Let dynamic process noise 𝚿\\boldsymbol{\\Psi} given 𝚿=(0.10000.10000.1).\\begin{equation} \\boldsymbol{\\Psi} = \\left( \\begin{array}{ccc}   0.1 & 0 & 0 \\\\   0 & 0.1 & 0 \\\\   0 & 0 & 0.1 \\\\ \\end{array} \\right) . \\end{equation}","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-2-fixed.html","id":"r-function-arguments","dir":"Articles","previous_headings":"Data Generation","what":"R Function Arguments","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 2)","text":"","code":"n #> [1] 100 time #> [1] 1000 mu0 #> [1] 0 0 0 sigma0 #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 sigma0_l #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 alpha #> [1] 0 0 0 beta #>      [,1] [,2] [,3] #> [1,]  0.7  0.0  0.0 #> [2,]  0.5  0.6  0.0 #> [3,] -0.1  0.4  0.5 psi #>      [,1] [,2] [,3] #> [1,]  0.1  0.0  0.0 #> [2,]  0.0  0.1  0.0 #> [3,]  0.0  0.0  0.1 psi_l #>           [,1]      [,2]      [,3] #> [1,] 0.3162278 0.0000000 0.0000000 #> [2,] 0.0000000 0.3162278 0.0000000 #> [3,] 0.0000000 0.0000000 0.3162278 nu #> [1] 0 0 0 lambda #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 theta #>      [,1] [,2] [,3] #> [1,]  0.2  0.0  0.0 #> [2,]  0.0  0.2  0.0 #> [3,]  0.0  0.0  0.2"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-2-fixed.html","id":"using-the-simssmfixed-function-from-the-simstatespace-package-to-simulate-data","dir":"Articles","previous_headings":"Data Generation","what":"Using the SimSSMFixed Function from the simStateSpace Package to Simulate Data","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 2)","text":"","code":"library(simStateSpace) sim <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l ) data <- as.data.frame(sim) head(data) #>   id time          y1         y2         y3 #> 1  1    0 -0.36389392  0.2260508 -1.0840920 #> 2  1    1 -0.17839821 -0.4923748 -0.2933503 #> 3  1    2 -0.29837320 -0.5441213  0.1678981 #> 4  1    3  0.06914180 -1.5266350 -0.7623779 #> 5  1    4  0.55603569 -0.8676678  0.1421071 #> 6  1    5  0.01185309 -0.4340968 -0.7695032 plot(sim)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-2-fixed.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 2)","text":"DTVAR function fits DT-VAR model assuming fixed parameters using byid = FALSE argument.","code":"library(fitDTVARMx) DTVAR(   data = data,   observed = paste0(\"y\", seq_len(k)),   id = \"id\",   model = 2,   byid = FALSE,   ncores = parallel::detectCores() ) #> Running DTVAR with 15 parameters #>  #> Beginning initial fit attempt #> Running DTVAR with 15 parameters #>  #>  Lowest minimum so far:  531297.191207095 #>  #> Solution found #>  #>  Solution found!  Final fit=531297.19 (started at 744579.25)  (1 attempt(s): 1 valid, 0 errors) #>  Start values from best fit: #> 0.715108085584049,0.503179382517853,-0.100493848324792,-0.00525790823812377,0.597983477096867,0.393138737995255,0.00372581704164535,-0.00148663979131545,0.506838726199001,0.0950906689111963,0.102449336952055,0.0964589140669799,0.202358434345471,0.198776795748676,0.20440380136777 #> Summary of DTVAR  #>   #> free parameters: #>        name        matrix  row  col     Estimate   Std.Error A #> 1   beta_11  DTVAR_1.beta eta1 eta1  0.715108086 0.009099858   #> 2   beta_21  DTVAR_1.beta eta2 eta1  0.503179383 0.008524413   #> 3   beta_31  DTVAR_1.beta eta3 eta1 -0.100493848 0.006006711   #> 4   beta_12  DTVAR_1.beta eta1 eta2 -0.005257908 0.005576602   #> 5   beta_22  DTVAR_1.beta eta2 eta2  0.597983477 0.007150675   #> 6   beta_32  DTVAR_1.beta eta3 eta2  0.393138738 0.006166185   #> 7   beta_13  DTVAR_1.beta eta1 eta3  0.003725817 0.004016314   #> 8   beta_23  DTVAR_1.beta eta2 eta3 -0.001486640 0.005190335   #> 9   beta_33  DTVAR_1.beta eta3 eta3  0.506838726 0.006359302   #> 10   psi_11   DTVAR_1.psi eta1 eta1  0.095090669 0.002834411   #> 11   psi_22   DTVAR_1.psi eta2 eta2  0.102449337 0.002410064   #> 12   psi_33   DTVAR_1.psi eta3 eta3  0.096458914 0.002785619   #> 13 theta_11 DTVAR_1.theta   y1   y1  0.202358434 0.002410840   #> 14 theta_22 DTVAR_1.theta   y2   y2  0.198776796 0.002299263   #> 15 theta_33 DTVAR_1.theta   y3   y3  0.204403801 0.002813502   #>                  lbound ubound #> 1                              #> 2                              #> 3                              #> 4                              #> 5                              #> 6                              #> 7                              #> 8                              #> 9                              #> 10 2.2250738585072e-308        #> 11 2.2250738585072e-308        #> 12 2.2250738585072e-308        #> 13 2.2250738585072e-308        #> 14 2.2250738585072e-308        #> 15 2.2250738585072e-308        #>  #> Model Statistics:  #>                |  Parameters  |  Degrees of Freedom  |  Fit (-2lnL units) #>        Model:             15                 299985              531297.2 #>    Saturated:             NA                     NA                    NA #> Independence:             NA                     NA                    NA #> Number of observations/statistics: 1e+05/3e+05 #>  #> Information Criteria:  #>       |  df Penalty  |  Parameters Penalty  |  Sample-Size Adjusted #> AIC:      -68672.81               531327.2                 531327.2 #> BIC:    -2922407.75               531469.9                 531422.2 #> CFI: NA  #> TLI: 1   (also known as NNFI)  #> RMSEA:  0  [95% CI (NA, NA)] #> Prob(RMSEA <= 0.05): NA #> To get additional fit indices, see help(mxRefModels) #> timestamp: 2024-09-21 21:30:56  #> Wall clock time: 262.1666 secs  #> optimizer:  SLSQP  #> OpenMx version number: 2.21.12  #> Need help?  See help(mxSummary)"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-2-id-random.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 2)","text":"measurement model given 𝐲i,t=𝚲𝛈i,t+𝛆i,t,with𝛆i,t∼𝒩(𝟎,𝚯)\\begin{equation}   \\mathbf{y}_{, t}   =   \\boldsymbol{\\Lambda}   \\boldsymbol{\\eta}_{, t}   +   \\boldsymbol{\\varepsilon}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\varepsilon}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Theta}   \\right) \\end{equation} 𝐲i,t\\mathbf{y}_{, t}, 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} random variables 𝚲\\boldsymbol{\\Lambda}, 𝚯\\boldsymbol{\\Theta} model parameters. 𝐲i,t\\mathbf{y}_{, t} represents vector observed random variables, 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent random variables, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} vector random measurement errors, time tt individual ii. 𝚲\\boldsymbol{\\Lambda} denotes matrix factor loadings, 𝚯\\boldsymbol{\\Theta} covariance matrix 𝛆\\boldsymbol{\\varepsilon}. model, 𝚲\\boldsymbol{\\Lambda} identity matrix 𝚯\\boldsymbol{\\Theta} diagonal matrix. dynamic structure given 𝛈i,t=𝛃𝛈i,t−1+𝛇i,t,with𝛇i,t∼𝒩(𝟎,𝚿)\\begin{equation}   \\boldsymbol{\\eta}_{, t}   =   \\boldsymbol{\\beta}   \\boldsymbol{\\eta}_{, t - 1}   +   \\boldsymbol{\\zeta}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\zeta}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Psi}   \\right) \\end{equation} 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1}, 𝛇i,t\\boldsymbol{\\zeta}_{, t} random variables, 𝛃\\boldsymbol{\\beta}, 𝚿\\boldsymbol{\\Psi} model parameters. , 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent variables time tt individual ii, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1} represents vector latent variables time t−1t - 1 individual ii, 𝛇i,t\\boldsymbol{\\zeta}_{, t} represents vector dynamic noise time tt individual ii. 𝛃\\boldsymbol{\\beta} denotes matrix autoregression cross regression coefficients, 𝚿\\boldsymbol{\\Psi} covariance matrix 𝛇i,t\\boldsymbol{\\zeta}_{, t}. model, 𝚿\\boldsymbol{\\Psi} diagonal matrix.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-2-id-random.html","id":"notation","dir":"Articles","previous_headings":"Data Generation","what":"Notation","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 2)","text":"Let t=1000t = 1000 number time points n=100n = 100 number individuals. Let measurement model intecept vector 𝛎\\boldsymbol{\\nu} given 𝛎=(000).\\begin{equation} \\boldsymbol{\\nu} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) . \\end{equation} Let factor loadings matrix 𝚲\\boldsymbol{\\Lambda} given 𝚲=(100010001).\\begin{equation} \\boldsymbol{\\Lambda} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let measurement error covariance matrix 𝚯\\boldsymbol{\\Theta} given 𝚯=(0.20000.20000.2).\\begin{equation} \\boldsymbol{\\Theta} = \\left( \\begin{array}{ccc}   0.2 & 0 & 0 \\\\   0 & 0.2 & 0 \\\\   0 & 0 & 0.2 \\\\ \\end{array} \\right) . \\end{equation} Let initial condition 𝛈0\\boldsymbol{\\eta}_{0} given 𝛈0∼𝒩(𝛍𝛈∣0,𝚺𝛈∣0)\\begin{equation} \\boldsymbol{\\eta}_{0} \\sim \\mathcal{N} \\left( \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}, \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} \\right) \\end{equation} 𝛍𝛈∣0=(000)\\begin{equation} \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) \\end{equation} 𝚺𝛈∣0=(100010001).\\begin{equation} \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let transition matrix 𝛃\\boldsymbol{\\beta} normally distributed following means (0.7000.50.60−0.10.40.5)\\begin{equation} \\left( \\begin{array}{ccc}   0.7 & 0 & 0 \\\\   0.5 & 0.6 & 0 \\\\   -0.1 & 0.4 & 0.5 \\\\ \\end{array} \\right) \\end{equation} covariance matrix (0.010000000000.010000000000.010000000000.010000000000.010000000000.010000000000.010000000000.010000000000.01).\\begin{equation} \\left( \\begin{array}{ccc}   0.01 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0.01 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0.01 & 0 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0.01 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0.01 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0.01 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0 & 0.01 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0 & 0 & 0.01 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0.01 \\\\ \\end{array} \\right) . \\end{equation} SimBetaN function simStateSpace package generates random transition matrices multivariate normal distribution. Note function generates transition matrices weakly stationary. Let dynamic process noise 𝚿\\boldsymbol{\\Psi} given 𝚿=(0.10000.10000.1).\\begin{equation} \\boldsymbol{\\Psi} = \\left( \\begin{array}{ccc}   0.1 & 0 & 0 \\\\   0 & 0.1 & 0 \\\\   0 & 0 & 0.1 \\\\ \\end{array} \\right) . \\end{equation}","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-2-id-random.html","id":"r-function-arguments","dir":"Articles","previous_headings":"Data Generation","what":"R Function Arguments","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 2)","text":"","code":"n #> [1] 100 time #> [1] 1000 mu0 #> [[1]] #> [1] 0 0 0 sigma0 #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 sigma0_l #> [[1]] #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 alpha #> [[1]] #> [1] 0 0 0 # first beta in the list of length n beta[[1]] #>           [,1]       [,2]       [,3] #> [1,] 0.6468498 0.02987347 0.09881764 #> [2,] 0.5821253 0.64048586 0.12907652 #> [3,] 0.1217450 0.33748281 0.46598132 psi #>      [,1] [,2] [,3] #> [1,]  0.1  0.0  0.0 #> [2,]  0.0  0.1  0.0 #> [3,]  0.0  0.0  0.1 psi_l #> [[1]] #>           [,1]      [,2]      [,3] #> [1,] 0.3162278 0.0000000 0.0000000 #> [2,] 0.0000000 0.3162278 0.0000000 #> [3,] 0.0000000 0.0000000 0.3162278 nu #> [[1]] #> [1] 0 0 0 lambda #> [[1]] #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 theta #>      [,1] [,2] [,3] #> [1,]  0.2  0.0  0.0 #> [2,]  0.0  0.2  0.0 #> [3,]  0.0  0.0  0.2"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-2-id-random.html","id":"using-the-simssmivary-function-from-the-simstatespace-package-to-simulate-data","dir":"Articles","previous_headings":"Data Generation","what":"Using the SimSSMIVary Function from the simStateSpace Package to Simulate Data","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 2)","text":"","code":"library(simStateSpace) sim <- SimSSMIVary(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l ) data <- as.data.frame(sim) head(data) #>   id time          y1         y2          y3 #> 1  1    0 -0.63437294  0.6021365 -0.91776552 #> 2  1    1 -0.81485487  0.3819811  0.68347267 #> 3  1    2 -0.74662080  0.1263441  0.85777810 #> 4  1    3 -0.50939822 -0.3310262  0.82453806 #> 5  1    4 -0.03333068 -0.4789725 -0.09547539 #> 6  1    5  0.82744597 -0.1903433  1.01685273 plot(sim)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-2-id-random.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 2)","text":"DTVAR function fits DT-VAR model individual ii using byid = TRUE argument.","code":"library(fitDTVARMx) DTVAR(   data = data,   observed = paste0(\"y\", seq_len(k)),   id = \"id\",   model = 2,   byid = TRUE,   ncores = parallel::detectCores() ) #>  #> Means of the estimated paramaters per individual. #>      beta_11      beta_21      beta_31      beta_12      beta_22      beta_32  #>  0.686051671  0.496737838 -0.099603412 -0.005823978  0.580737137  0.392063972  #>      beta_13      beta_23      beta_33       psi_11       psi_22       psi_33  #>  0.006858467 -0.012488544  0.495878788  0.100488503  0.096258127  0.100394772  #>     theta_11     theta_22     theta_33  #>  0.197328625  0.203562450  0.196733273"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-3-fixed.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 3)","text":"measurement model given 𝐲i,t=𝚲𝛈i,t+𝛆i,t,with𝛆i,t∼𝒩(𝟎,𝚯)\\begin{equation}   \\mathbf{y}_{, t}   =   \\boldsymbol{\\Lambda}   \\boldsymbol{\\eta}_{, t}   +   \\boldsymbol{\\varepsilon}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\varepsilon}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Theta}   \\right) \\end{equation} 𝐲i,t\\mathbf{y}_{, t}, 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} random variables 𝚲\\boldsymbol{\\Lambda}, 𝚯\\boldsymbol{\\Theta} model parameters. 𝐲i,t\\mathbf{y}_{, t} represents vector observed random variables, 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent random variables, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} vector random measurement errors, time tt individual ii. 𝚲\\boldsymbol{\\Lambda} denotes matrix factor loadings, 𝚯\\boldsymbol{\\Theta} covariance matrix 𝛆\\boldsymbol{\\varepsilon}. model, 𝚲\\boldsymbol{\\Lambda} identity matrix 𝚯\\boldsymbol{\\Theta} diagonal matrix. dynamic structure given 𝛈i,t=𝛂+𝛃𝛈i,t−1+𝛇i,t,with𝛇i,t∼𝒩(𝟎,𝚿)\\begin{equation}   \\boldsymbol{\\eta}_{, t}   =   \\boldsymbol{\\alpha}   +   \\boldsymbol{\\beta}   \\boldsymbol{\\eta}_{, t - 1}   +   \\boldsymbol{\\zeta}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\zeta}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Psi}   \\right) \\end{equation} 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1}, 𝛇i,t\\boldsymbol{\\zeta}_{, t} random variables, 𝛂\\boldsymbol{\\alpha}, 𝛃\\boldsymbol{\\beta}, 𝚿\\boldsymbol{\\Psi} model parameters. , 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent variables time tt individual ii, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1} represents vector latent variables time t−1t - 1 individual ii, 𝛇i,t\\boldsymbol{\\zeta}_{, t} represents vector dynamic noise time tt individual ii. 𝛂\\boldsymbol{\\alpha} denotes vector intercepts, 𝛃\\boldsymbol{\\beta} matrix autoregression cross regression coefficients, 𝚿\\boldsymbol{\\Psi} covariance matrix 𝛇i,t\\boldsymbol{\\zeta}_{, t}. model, 𝚿\\boldsymbol{\\Psi} symmetric matrix.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-3-fixed.html","id":"notation","dir":"Articles","previous_headings":"Data Generation","what":"Notation","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 3)","text":"Let t=1000t = 1000 number time points n=100n = 100 number individuals. Let measurement model intecept vector 𝛎\\boldsymbol{\\nu} given 𝛎=(000).\\begin{equation} \\boldsymbol{\\nu} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) . \\end{equation} Let factor loadings matrix 𝚲\\boldsymbol{\\Lambda} given 𝚲=(100010001).\\begin{equation} \\boldsymbol{\\Lambda} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let measurement error covariance matrix 𝚯\\boldsymbol{\\Theta} given 𝚯=(0.20000.20000.2).\\begin{equation} \\boldsymbol{\\Theta} = \\left( \\begin{array}{ccc}   0.2 & 0 & 0 \\\\   0 & 0.2 & 0 \\\\   0 & 0 & 0.2 \\\\ \\end{array} \\right) . \\end{equation} Let initial condition 𝛈0\\boldsymbol{\\eta}_{0} given 𝛈0∼𝒩(𝛍𝛈∣0,𝚺𝛈∣0)\\begin{equation} \\boldsymbol{\\eta}_{0} \\sim \\mathcal{N} \\left( \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}, \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} \\right) \\end{equation} 𝛍𝛈∣0=(000)\\begin{equation} \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) \\end{equation} 𝚺𝛈∣0=(100010001).\\begin{equation} \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let transition matrix 𝛃\\boldsymbol{\\beta} given 𝛃=(0.7000.50.60−0.10.40.5).\\begin{equation} \\boldsymbol{\\beta} = \\left( \\begin{array}{ccc}   0.7 & 0 & 0 \\\\   0.5 & 0.6 & 0 \\\\   -0.1 & 0.4 & 0.5 \\\\ \\end{array} \\right) . \\end{equation} Let dynamic process noise 𝚿\\boldsymbol{\\Psi} given 𝚿=(0.10000.10000.1).\\begin{equation} \\boldsymbol{\\Psi} = \\left( \\begin{array}{ccc}   0.1 & 0 & 0 \\\\   0 & 0.1 & 0 \\\\   0 & 0 & 0.1 \\\\ \\end{array} \\right) . \\end{equation}","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-3-fixed.html","id":"r-function-arguments","dir":"Articles","previous_headings":"Data Generation","what":"R Function Arguments","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 3)","text":"","code":"n #> [1] 100 time #> [1] 1000 mu0 #> [1] 0 0 0 sigma0 #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 sigma0_l #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 alpha #> [1] 0 0 0 beta #>      [,1] [,2] [,3] #> [1,]  0.7  0.0  0.0 #> [2,]  0.5  0.6  0.0 #> [3,] -0.1  0.4  0.5 psi #>      [,1] [,2] [,3] #> [1,]  0.1  0.0  0.0 #> [2,]  0.0  0.1  0.0 #> [3,]  0.0  0.0  0.1 psi_l #>           [,1]      [,2]      [,3] #> [1,] 0.3162278 0.0000000 0.0000000 #> [2,] 0.0000000 0.3162278 0.0000000 #> [3,] 0.0000000 0.0000000 0.3162278 nu #> [1] 0 0 0 lambda #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 theta #>      [,1] [,2] [,3] #> [1,]  0.2  0.0  0.0 #> [2,]  0.0  0.2  0.0 #> [3,]  0.0  0.0  0.2"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-3-fixed.html","id":"using-the-simssmfixed-function-from-the-simstatespace-package-to-simulate-data","dir":"Articles","previous_headings":"Data Generation","what":"Using the SimSSMFixed Function from the simStateSpace Package to Simulate Data","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 3)","text":"","code":"library(simStateSpace) sim <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l ) data <- as.data.frame(sim) head(data) #>   id time          y1         y2         y3 #> 1  1    0 -0.36389392  0.2260508 -1.0840920 #> 2  1    1 -0.17839821 -0.4923748 -0.2933503 #> 3  1    2 -0.29837320 -0.5441213  0.1678981 #> 4  1    3  0.06914180 -1.5266350 -0.7623779 #> 5  1    4  0.55603569 -0.8676678  0.1421071 #> 6  1    5  0.01185309 -0.4340968 -0.7695032 plot(sim)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-3-fixed.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 3)","text":"DTVAR function fits DT-VAR model assuming fixed parameters using byid = FALSE argument.","code":"library(fitDTVARMx) DTVAR(   data = data,   observed = paste0(\"y\", seq_len(k)),   id = \"id\",   model = 3,   byid = FALSE,   ncores = parallel::detectCores() ) #> Running DTVAR with 18 parameters #>  #> Beginning initial fit attempt #> Running DTVAR with 18 parameters #>  #>  Lowest minimum so far:  531295.756335847 #>  #> Solution found #>  #>  Solution found!  Final fit=531295.76 (started at 744579.25)  (1 attempt(s): 1 valid, 0 errors) #>  Start values from best fit: #> 0.715101027969633,0.503160910963144,-0.100509850060316,-0.00525204829373575,0.59800927885227,0.393170948320076,0.003719271093607,-0.00150742701280248,0.506784821711808,0.000141056788307544,0.000278284220587505,0.00145694003210771,0.095092310422866,0.10244016890825,0.0964631722679604,0.202357362747647,0.198784590156588,0.204397683639594 #> Summary of DTVAR  #>   #> free parameters: #>        name        matrix  row  col      Estimate   Std.Error A #> 1   beta_11  DTVAR_1.beta eta1 eta1  0.7151010280 0.009097515   #> 2   beta_21  DTVAR_1.beta eta2 eta1  0.5031609110 0.008524219   #> 3   beta_31  DTVAR_1.beta eta3 eta1 -0.1005098501 0.006006596   #> 4   beta_12  DTVAR_1.beta eta1 eta2 -0.0052520483 0.005575145   #> 5   beta_22  DTVAR_1.beta eta2 eta2  0.5980092789 0.007151306   #> 6   beta_32  DTVAR_1.beta eta3 eta2  0.3931709483 0.006166619   #> 7   beta_13  DTVAR_1.beta eta1 eta3  0.0037192711 0.004016034   #> 8   beta_23  DTVAR_1.beta eta2 eta3 -0.0015074270 0.005190749   #> 9   beta_33  DTVAR_1.beta eta3 eta3  0.5067848217 0.006360396   #> 10  alpha_1 DTVAR_1.gamma    1    1  0.0001410568 0.001057021   #> 11  alpha_2 DTVAR_1.gamma    2    1  0.0002782842 0.001363937   #> 12  alpha_3 DTVAR_1.gamma    3    1  0.0014569400 0.001338754   #> 13   psi_11   DTVAR_1.psi eta1 eta1  0.0950923104 0.002833889   #> 14   psi_22   DTVAR_1.psi eta2 eta2  0.1024401689 0.002409947   #> 15   psi_33   DTVAR_1.psi eta3 eta3  0.0964631723 0.002786086   #> 16 theta_11 DTVAR_1.theta   y1   y1  0.2023573627 0.002410551   #> 17 theta_22 DTVAR_1.theta   y2   y2  0.1987845902 0.002299211   #> 18 theta_33 DTVAR_1.theta   y3   y3  0.2043976836 0.002813887   #>                  lbound ubound #> 1                              #> 2                              #> 3                              #> 4                              #> 5                              #> 6                              #> 7                              #> 8                              #> 9                              #> 10                             #> 11                             #> 12                             #> 13 2.2250738585072e-308        #> 14 2.2250738585072e-308        #> 15 2.2250738585072e-308        #> 16 2.2250738585072e-308        #> 17 2.2250738585072e-308        #> 18 2.2250738585072e-308        #>  #> Model Statistics:  #>                |  Parameters  |  Degrees of Freedom  |  Fit (-2lnL units) #>        Model:             18                 299982              531295.8 #>    Saturated:             NA                     NA                    NA #> Independence:             NA                     NA                    NA #> Number of observations/statistics: 1e+05/3e+05 #>  #> Information Criteria:  #>       |  df Penalty  |  Parameters Penalty  |  Sample-Size Adjusted #> AIC:      -68668.24               531331.8                 531331.8 #> BIC:    -2922374.65               531503.0                 531445.8 #> CFI: NA  #> TLI: 1   (also known as NNFI)  #> RMSEA:  0  [95% CI (NA, NA)] #> Prob(RMSEA <= 0.05): NA #> To get additional fit indices, see help(mxRefModels) #> timestamp: 2024-09-21 21:43:04  #> Wall clock time: 353.9361 secs  #> optimizer:  SLSQP  #> OpenMx version number: 2.21.12  #> Need help?  See help(mxSummary)"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-3-id-random.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 3)","text":"measurement model given 𝐲i,t=𝚲𝛈i,t+𝛆i,t,with𝛆i,t∼𝒩(𝟎,𝚯)\\begin{equation}   \\mathbf{y}_{, t}   =   \\boldsymbol{\\Lambda}   \\boldsymbol{\\eta}_{, t}   +   \\boldsymbol{\\varepsilon}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\varepsilon}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Theta}   \\right) \\end{equation} 𝐲i,t\\mathbf{y}_{, t}, 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} random variables 𝚲\\boldsymbol{\\Lambda}, 𝚯\\boldsymbol{\\Theta} model parameters. 𝐲i,t\\mathbf{y}_{, t} represents vector observed random variables, 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent random variables, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} vector random measurement errors, time tt individual ii. 𝚲\\boldsymbol{\\Lambda} denotes matrix factor loadings, 𝚯\\boldsymbol{\\Theta} covariance matrix 𝛆\\boldsymbol{\\varepsilon}. model, 𝚲\\boldsymbol{\\Lambda} identity matrix 𝚯\\boldsymbol{\\Theta} diagonal matrix. dynamic structure given 𝛈i,t=𝛂+𝛃𝛈i,t−1+𝛇i,t,with𝛇i,t∼𝒩(𝟎,𝚿)\\begin{equation}   \\boldsymbol{\\eta}_{, t}   =   \\boldsymbol{\\alpha}   +   \\boldsymbol{\\beta}   \\boldsymbol{\\eta}_{, t - 1}   +   \\boldsymbol{\\zeta}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\zeta}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Psi}   \\right) \\end{equation} 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1}, 𝛇i,t\\boldsymbol{\\zeta}_{, t} random variables, 𝛂\\boldsymbol{\\alpha}, 𝛃\\boldsymbol{\\beta}, 𝚿\\boldsymbol{\\Psi} model parameters. , 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent variables time tt individual ii, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1} represents vector latent variables time t−1t - 1 individual ii, 𝛇i,t\\boldsymbol{\\zeta}_{, t} represents vector dynamic noise time tt individual ii. 𝛂\\boldsymbol{\\alpha} denotes vector intercepts, 𝛃\\boldsymbol{\\beta} matrix autoregression cross regression coefficients, 𝚿\\boldsymbol{\\Psi} covariance matrix 𝛇i,t\\boldsymbol{\\zeta}_{, t}. model, 𝚿\\boldsymbol{\\Psi} diagonal matrix.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-3-id-random.html","id":"notation","dir":"Articles","previous_headings":"Data Generation","what":"Notation","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 3)","text":"Let t=1000t = 1000 number time points n=100n = 100 number individuals. Let measurement model intecept vector 𝛎\\boldsymbol{\\nu} given 𝛎=(000).\\begin{equation} \\boldsymbol{\\nu} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) . \\end{equation} Let factor loadings matrix 𝚲\\boldsymbol{\\Lambda} given 𝚲=(100010001).\\begin{equation} \\boldsymbol{\\Lambda} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let measurement error covariance matrix 𝚯\\boldsymbol{\\Theta} given 𝚯=(0.20000.20000.2).\\begin{equation} \\boldsymbol{\\Theta} = \\left( \\begin{array}{ccc}   0.2 & 0 & 0 \\\\   0 & 0.2 & 0 \\\\   0 & 0 & 0.2 \\\\ \\end{array} \\right) . \\end{equation} Let initial condition 𝛈0\\boldsymbol{\\eta}_{0} given 𝛈0∼𝒩(𝛍𝛈∣0,𝚺𝛈∣0)\\begin{equation} \\boldsymbol{\\eta}_{0} \\sim \\mathcal{N} \\left( \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}, \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} \\right) \\end{equation} 𝛍𝛈∣0=(000)\\begin{equation} \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) \\end{equation} 𝚺𝛈∣0=(100010001).\\begin{equation} \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let transition matrix 𝛃\\boldsymbol{\\beta} normally distributed following means (0.7000.50.60−0.10.40.5)\\begin{equation} \\left( \\begin{array}{ccc}   0.7 & 0 & 0 \\\\   0.5 & 0.6 & 0 \\\\   -0.1 & 0.4 & 0.5 \\\\ \\end{array} \\right) \\end{equation} covariance matrix (0.010000000000.010000000000.010000000000.010000000000.010000000000.010000000000.010000000000.010000000000.01).\\begin{equation} \\left( \\begin{array}{ccc}   0.01 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0.01 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0.01 & 0 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0.01 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0.01 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0.01 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0 & 0.01 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0 & 0 & 0.01 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0.01 \\\\ \\end{array} \\right) . \\end{equation} SimBetaN function simStateSpace package generates random transition matrices multivariate normal distribution. Note function generates transition matrices weakly stationary. Let dynamic process noise 𝚿\\boldsymbol{\\Psi} given 𝚿=(0.10000.10000.1).\\begin{equation} \\boldsymbol{\\Psi} = \\left( \\begin{array}{ccc}   0.1 & 0 & 0 \\\\   0 & 0.1 & 0 \\\\   0 & 0 & 0.1 \\\\ \\end{array} \\right) . \\end{equation}","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-3-id-random.html","id":"r-function-arguments","dir":"Articles","previous_headings":"Data Generation","what":"R Function Arguments","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 3)","text":"","code":"n #> [1] 100 time #> [1] 1000 mu0 #> [[1]] #> [1] 0 0 0 sigma0 #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 sigma0_l #> [[1]] #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 alpha #> [[1]] #> [1] 0 0 0 # first beta in the list of length n beta[[1]] #>           [,1]       [,2]       [,3] #> [1,] 0.6468498 0.02987347 0.09881764 #> [2,] 0.5821253 0.64048586 0.12907652 #> [3,] 0.1217450 0.33748281 0.46598132 psi #>      [,1] [,2] [,3] #> [1,]  0.1  0.0  0.0 #> [2,]  0.0  0.1  0.0 #> [3,]  0.0  0.0  0.1 psi_l #> [[1]] #>           [,1]      [,2]      [,3] #> [1,] 0.3162278 0.0000000 0.0000000 #> [2,] 0.0000000 0.3162278 0.0000000 #> [3,] 0.0000000 0.0000000 0.3162278 nu #> [[1]] #> [1] 0 0 0 lambda #> [[1]] #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 theta #>      [,1] [,2] [,3] #> [1,]  0.2  0.0  0.0 #> [2,]  0.0  0.2  0.0 #> [3,]  0.0  0.0  0.2"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-3-id-random.html","id":"using-the-simssmivary-function-from-the-simstatespace-package-to-simulate-data","dir":"Articles","previous_headings":"Data Generation","what":"Using the SimSSMIVary Function from the simStateSpace Package to Simulate Data","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 3)","text":"","code":"library(simStateSpace) sim <- SimSSMIVary(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l ) data <- as.data.frame(sim) head(data) #>   id time          y1         y2          y3 #> 1  1    0 -0.63437294  0.6021365 -0.91776552 #> 2  1    1 -0.81485487  0.3819811  0.68347267 #> 3  1    2 -0.74662080  0.1263441  0.85777810 #> 4  1    3 -0.50939822 -0.3310262  0.82453806 #> 5  1    4 -0.03333068 -0.4789725 -0.09547539 #> 6  1    5  0.82744597 -0.1903433  1.01685273 plot(sim)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-3-id-random.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 3)","text":"DTVAR function fits DT-VAR model individual ii using byid = TRUE argument.","code":"library(fitDTVARMx) DTVAR(   data = data,   observed = paste0(\"y\", seq_len(k)),   id = \"id\",   model = 3,   byid = TRUE,   ncores = parallel::detectCores() ) #>  #> Means of the estimated paramaters per individual. #>       beta_11       beta_21       beta_31       beta_12       beta_22  #>  0.6853291177  0.4995654025 -0.1002026633 -0.0065105746  0.5765837214  #>       beta_32       beta_13       beta_23       beta_33       alpha_1  #>  0.3941583504  0.0063578168  0.0005085038  0.4925069564 -0.0004132921  #>       alpha_2       alpha_3        psi_11        psi_22        psi_33  #>  0.0003133348  0.0021032101  0.0999823059  0.0961668050  0.0995676558  #>      theta_11      theta_22      theta_33  #>  0.1976591069  0.2033624221  0.1974358728"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-4-fixed.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 4)","text":"measurement model given 𝐲i,t=𝚲𝛈i,t+𝛆i,t,with𝛆i,t∼𝒩(𝟎,𝚯)\\begin{equation}   \\mathbf{y}_{, t}   =   \\boldsymbol{\\Lambda}   \\boldsymbol{\\eta}_{, t}   +   \\boldsymbol{\\varepsilon}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\varepsilon}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Theta}   \\right) \\end{equation} 𝐲i,t\\mathbf{y}_{, t}, 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} random variables 𝚲\\boldsymbol{\\Lambda}, 𝚯\\boldsymbol{\\Theta} model parameters. 𝐲i,t\\mathbf{y}_{, t} represents vector observed random variables, 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent random variables, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} vector random measurement errors, time tt individual ii. 𝚲\\boldsymbol{\\Lambda} denotes matrix factor loadings, 𝚯\\boldsymbol{\\Theta} covariance matrix 𝛆\\boldsymbol{\\varepsilon}. model, 𝚲\\boldsymbol{\\Lambda} identity matrix 𝚯\\boldsymbol{\\Theta} diagonal matrix. dynamic structure given 𝛈i,t=𝛂+𝛃𝛈i,t−1+𝛇i,t,with𝛇i,t∼𝒩(𝟎,𝚿)\\begin{equation}   \\boldsymbol{\\eta}_{, t}   =   \\boldsymbol{\\alpha}   +   \\boldsymbol{\\beta}   \\boldsymbol{\\eta}_{, t - 1}   +   \\boldsymbol{\\zeta}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\zeta}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Psi}   \\right) \\end{equation} 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1}, 𝛇i,t\\boldsymbol{\\zeta}_{, t} random variables, 𝛂\\boldsymbol{\\alpha}, 𝛃\\boldsymbol{\\beta}, 𝚿\\boldsymbol{\\Psi} model parameters. , 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent variables time tt individual ii, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1} represents vector latent variables time t−1t - 1 individual ii, 𝛇i,t\\boldsymbol{\\zeta}_{, t} represents vector dynamic noise time tt individual ii. 𝛂\\boldsymbol{\\alpha} denotes vector intercepts, 𝛃\\boldsymbol{\\beta} matrix autoregression cross regression coefficients, 𝚿\\boldsymbol{\\Psi} covariance matrix 𝛇i,t\\boldsymbol{\\zeta}_{, t}. model, 𝚿\\boldsymbol{\\Psi} symmetric matrix.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-4-fixed.html","id":"notation","dir":"Articles","previous_headings":"Data Generation","what":"Notation","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 4)","text":"Let t=1000t = 1000 number time points n=100n = 100 number individuals. Let measurement model intecept vector 𝛎\\boldsymbol{\\nu} given 𝛎=(000).\\begin{equation} \\boldsymbol{\\nu} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) . \\end{equation} Let factor loadings matrix 𝚲\\boldsymbol{\\Lambda} given 𝚲=(100010001).\\begin{equation} \\boldsymbol{\\Lambda} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let measurement error covariance matrix 𝚯\\boldsymbol{\\Theta} given 𝚯=(0.20000.20000.2).\\begin{equation} \\boldsymbol{\\Theta} = \\left( \\begin{array}{ccc}   0.2 & 0 & 0 \\\\   0 & 0.2 & 0 \\\\   0 & 0 & 0.2 \\\\ \\end{array} \\right) . \\end{equation} Let initial condition 𝛈0\\boldsymbol{\\eta}_{0} given 𝛈0∼𝒩(𝛍𝛈∣0,𝚺𝛈∣0)\\begin{equation} \\boldsymbol{\\eta}_{0} \\sim \\mathcal{N} \\left( \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}, \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} \\right) \\end{equation} 𝛍𝛈∣0=(000)\\begin{equation} \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) \\end{equation} 𝚺𝛈∣0=(100010001).\\begin{equation} \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let transition matrix 𝛃\\boldsymbol{\\beta} given (0.7000.50.60−0.10.40.5).\\begin{equation} \\left( \\begin{array}{ccc}   0.7 & 0 & 0 \\\\   0.5 & 0.6 & 0 \\\\   -0.1 & 0.4 & 0.5 \\\\ \\end{array} \\right) . \\end{equation} Let dynamic process noise 𝚿\\boldsymbol{\\Psi} given 𝚿=(0.10000.10000.1).\\begin{equation} \\boldsymbol{\\Psi} = \\left( \\begin{array}{ccc}   0.1 & 0 & 0 \\\\   0 & 0.1 & 0 \\\\   0 & 0 & 0.1 \\\\ \\end{array} \\right) . \\end{equation}","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-4-fixed.html","id":"r-function-arguments","dir":"Articles","previous_headings":"Data Generation","what":"R Function Arguments","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 4)","text":"","code":"n #> [1] 100 time #> [1] 1000 mu0 #> [1] 0 0 0 sigma0 #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 sigma0_l #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 alpha #> [1] 0 0 0 beta #>      [,1] [,2] [,3] #> [1,]  0.7  0.0  0.0 #> [2,]  0.5  0.6  0.0 #> [3,] -0.1  0.4  0.5 psi #>      [,1] [,2] [,3] #> [1,]  0.1  0.0  0.0 #> [2,]  0.0  0.1  0.0 #> [3,]  0.0  0.0  0.1 psi_l #>           [,1]      [,2]      [,3] #> [1,] 0.3162278 0.0000000 0.0000000 #> [2,] 0.0000000 0.3162278 0.0000000 #> [3,] 0.0000000 0.0000000 0.3162278 nu #> [1] 0 0 0 lambda #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 theta #>      [,1] [,2] [,3] #> [1,]  0.2  0.0  0.0 #> [2,]  0.0  0.2  0.0 #> [3,]  0.0  0.0  0.2"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-4-fixed.html","id":"using-the-simssmfixed-function-from-the-simstatespace-package-to-simulate-data","dir":"Articles","previous_headings":"Data Generation","what":"Using the SimSSMFixed Function from the simStateSpace Package to Simulate Data","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 4)","text":"","code":"library(simStateSpace) sim <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l ) data <- as.data.frame(sim) head(data) #>   id time          y1         y2         y3 #> 1  1    0 -0.36389392  0.2260508 -1.0840920 #> 2  1    1 -0.17839821 -0.4923748 -0.2933503 #> 3  1    2 -0.29837320 -0.5441213  0.1678981 #> 4  1    3  0.06914180 -1.5266350 -0.7623779 #> 5  1    4  0.55603569 -0.8676678  0.1421071 #> 6  1    5  0.01185309 -0.4340968 -0.7695032 plot(sim)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-4-fixed.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Fit the Discrete-Time Vector Autoregressive Model (Model 4)","text":"DTVAR function fits DT-VAR model assuming fixed parameters using byid = FALSE argument.","code":"library(fitDTVARMx) DTVAR(   data = data,   observed = paste0(\"y\", seq_len(k)),   id = \"id\",   model = 4,   byid = FALSE,   ncores = parallel::detectCores() ) #> Running DTVAR with 21 parameters #>  #> Beginning initial fit attempt #> Running DTVAR with 21 parameters #>  #>  Lowest minimum so far:  531295.653479004 #>  #> Solution found #>  #>  Solution found!  Final fit=531295.65 (started at 744579.25)  (1 attempt(s): 1 valid, 0 errors) #>  Start values from best fit: #> 0.715091587825101,0.502971909459182,-0.0995693181517227,-0.00548531078926096,0.59805208130879,0.392379534311062,0.0041538392016595,-0.00158317425275972,0.507281439537445,0.000139346650256612,0.000278857880121277,0.00145505575667119,0.0951331460793542,6.63920432602426e-05,0.102477838056562,-0.00026592891362711,0.000174980984068906,0.0962505926704185,0.202322856197877,0.19875769334891,0.204637122590881 #> Summary of DTVAR  #>   #> free parameters: #>        name        matrix  row  col      Estimate   Std.Error A #> 1   beta_11  DTVAR_1.beta eta1 eta1  7.150916e-01 0.009125792   #> 2   beta_21  DTVAR_1.beta eta2 eta1  5.029719e-01 0.009947672   #> 3   beta_31  DTVAR_1.beta eta3 eta1 -9.956932e-02 0.007279710   #> 4   beta_12  DTVAR_1.beta eta1 eta2 -5.485311e-03 0.005738184   #> 5   beta_22  DTVAR_1.beta eta2 eta2  5.980521e-01 0.007745844   #> 6   beta_32  DTVAR_1.beta eta3 eta2  3.923795e-01 0.007040016   #> 7   beta_13  DTVAR_1.beta eta1 eta3  4.153839e-03 0.004307650   #> 8   beta_23  DTVAR_1.beta eta2 eta3 -1.583174e-03 0.005572664   #> 9   beta_33  DTVAR_1.beta eta3 eta3  5.072814e-01 0.006741556   #> 10  alpha_1 DTVAR_1.gamma    1    1  1.393467e-04 0.001057228   #> 11  alpha_2 DTVAR_1.gamma    2    1  2.788579e-04 0.001363883   #> 12  alpha_3 DTVAR_1.gamma    3    1  1.455056e-03 0.001337199   #> 13   psi_11   DTVAR_1.psi eta1 eta1  9.513315e-02 0.002886441   #> 14   psi_21   DTVAR_1.psi eta1 eta2  6.639204e-05 0.001095536   #> 15   psi_22   DTVAR_1.psi eta2 eta2  1.024778e-01 0.002546401   #> 16   psi_31   DTVAR_1.psi eta1 eta3 -2.659289e-04 0.001020344   #> 17   psi_32   DTVAR_1.psi eta2 eta3  1.749810e-04 0.001046411   #> 18   psi_33   DTVAR_1.psi eta3 eta3  9.625059e-02 0.002928645   #> 19 theta_11 DTVAR_1.theta   y1   y1  2.023229e-01 0.002464899   #> 20 theta_22 DTVAR_1.theta   y2   y2  1.987577e-01 0.002492712   #> 21 theta_33 DTVAR_1.theta   y3   y3  2.046371e-01 0.002974492   #>                  lbound ubound #> 1                              #> 2                              #> 3                              #> 4                              #> 5                              #> 6                              #> 7                              #> 8                              #> 9                              #> 10                             #> 11                             #> 12                             #> 13 2.2250738585072e-308        #> 14                             #> 15 2.2250738585072e-308        #> 16                             #> 17                             #> 18 2.2250738585072e-308        #> 19 2.2250738585072e-308        #> 20 2.2250738585072e-308        #> 21 2.2250738585072e-308        #>  #> Model Statistics:  #>                |  Parameters  |  Degrees of Freedom  |  Fit (-2lnL units) #>        Model:             21                 299979              531295.7 #>    Saturated:             NA                     NA                    NA #> Independence:             NA                     NA                    NA #> Number of observations/statistics: 1e+05/3e+05 #>  #> Information Criteria:  #>       |  df Penalty  |  Parameters Penalty  |  Sample-Size Adjusted #> AIC:      -68662.35               531337.7                 531337.7 #> BIC:    -2922340.21               531537.4                 531470.7 #> CFI: NA  #> TLI: 1   (also known as NNFI)  #> RMSEA:  0  [95% CI (NA, NA)] #> Prob(RMSEA <= 0.05): NA #> To get additional fit indices, see help(mxRefModels) #> timestamp: 2024-09-21 21:56:46  #> Wall clock time: 388.713 secs  #> optimizer:  SLSQP  #> OpenMx version number: 2.21.12  #> Need help?  See help(mxSummary)"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-4-id-random.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 4)","text":"measurement model given 𝐲i,t=𝚲𝛈i,t+𝛆i,t,with𝛆i,t∼𝒩(𝟎,𝚯)\\begin{equation}   \\mathbf{y}_{, t}   =   \\boldsymbol{\\Lambda}   \\boldsymbol{\\eta}_{, t}   +   \\boldsymbol{\\varepsilon}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\varepsilon}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Theta}   \\right) \\end{equation} 𝐲i,t\\mathbf{y}_{, t}, 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} random variables 𝚲\\boldsymbol{\\Lambda}, 𝚯\\boldsymbol{\\Theta} model parameters. 𝐲i,t\\mathbf{y}_{, t} represents vector observed random variables, 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent random variables, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} vector random measurement errors, time tt individual ii. 𝚲\\boldsymbol{\\Lambda} denotes matrix factor loadings, 𝚯\\boldsymbol{\\Theta} covariance matrix 𝛆\\boldsymbol{\\varepsilon}. model, 𝚲\\boldsymbol{\\Lambda} identity matrix 𝚯\\boldsymbol{\\Theta} diagonal matrix. dynamic structure given 𝛈i,t=𝛂+𝛃𝛈i,t−1+𝛇i,t,with𝛇i,t∼𝒩(𝟎,𝚿)\\begin{equation}   \\boldsymbol{\\eta}_{, t}   =   \\boldsymbol{\\alpha}   +   \\boldsymbol{\\beta}   \\boldsymbol{\\eta}_{, t - 1}   +   \\boldsymbol{\\zeta}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\zeta}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Psi}   \\right) \\end{equation} 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1}, 𝛇i,t\\boldsymbol{\\zeta}_{, t} random variables, 𝛂\\boldsymbol{\\alpha}, 𝛃\\boldsymbol{\\beta}, 𝚿\\boldsymbol{\\Psi} model parameters. , 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent variables time tt individual ii, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1} represents vector latent variables time t−1t - 1 individual ii, 𝛇i,t\\boldsymbol{\\zeta}_{, t} represents vector dynamic noise time tt individual ii. 𝛂\\boldsymbol{\\alpha} denotes vector intercepts, 𝛃\\boldsymbol{\\beta} matrix autoregression cross regression coefficients, 𝚿\\boldsymbol{\\Psi} covariance matrix 𝛇i,t\\boldsymbol{\\zeta}_{, t}. model, 𝚿\\boldsymbol{\\Psi} symmetric matrix.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-4-id-random.html","id":"notation","dir":"Articles","previous_headings":"Data Generation","what":"Notation","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 4)","text":"Let t=1000t = 1000 number time points n=100n = 100 number individuals. Let measurement model intecept vector 𝛎\\boldsymbol{\\nu} given 𝛎=(000).\\begin{equation} \\boldsymbol{\\nu} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) . \\end{equation} Let factor loadings matrix 𝚲\\boldsymbol{\\Lambda} given 𝚲=(100010001).\\begin{equation} \\boldsymbol{\\Lambda} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let measurement error covariance matrix 𝚯\\boldsymbol{\\Theta} given 𝚯=(0.20000.20000.2).\\begin{equation} \\boldsymbol{\\Theta} = \\left( \\begin{array}{ccc}   0.2 & 0 & 0 \\\\   0 & 0.2 & 0 \\\\   0 & 0 & 0.2 \\\\ \\end{array} \\right) . \\end{equation} Let initial condition 𝛈0\\boldsymbol{\\eta}_{0} given 𝛈0∼𝒩(𝛍𝛈∣0,𝚺𝛈∣0)\\begin{equation} \\boldsymbol{\\eta}_{0} \\sim \\mathcal{N} \\left( \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}, \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} \\right) \\end{equation} 𝛍𝛈∣0=(000)\\begin{equation} \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) \\end{equation} 𝚺𝛈∣0=(100010001).\\begin{equation} \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let transition matrix 𝛃\\boldsymbol{\\beta} normally distributed following means (0.7000.50.60−0.10.40.5)\\begin{equation} \\left( \\begin{array}{ccc}   0.7 & 0 & 0 \\\\   0.5 & 0.6 & 0 \\\\   -0.1 & 0.4 & 0.5 \\\\ \\end{array} \\right) \\end{equation} covariance matrix (0.010000000000.010000000000.010000000000.010000000000.010000000000.010000000000.010000000000.010000000000.01).\\begin{equation} \\left( \\begin{array}{ccc}   0.01 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0.01 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0.01 & 0 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0.01 & 0 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0.01 & 0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0.01 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0 & 0.01 & 0 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0 & 0 & 0.01 & 0 \\\\   0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0.01 \\\\ \\end{array} \\right) . \\end{equation} SimBetaN function simStateSpace package generates random transition matrices multivariate normal distribution. Note function generates transition matrices weakly stationary. Let dynamic process noise 𝚿\\boldsymbol{\\Psi} given 𝚿=(0.10000.10000.1).\\begin{equation} \\boldsymbol{\\Psi} = \\left( \\begin{array}{ccc}   0.1 & 0 & 0 \\\\   0 & 0.1 & 0 \\\\   0 & 0 & 0.1 \\\\ \\end{array} \\right) . \\end{equation}","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-4-id-random.html","id":"r-function-arguments","dir":"Articles","previous_headings":"Data Generation","what":"R Function Arguments","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 4)","text":"","code":"n #> [1] 100 time #> [1] 1000 mu0 #> [[1]] #> [1] 0 0 0 sigma0 #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 sigma0_l #> [[1]] #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 alpha #> [[1]] #> [1] 0 0 0 # first beta in the list of length n beta[[1]] #>           [,1]       [,2]       [,3] #> [1,] 0.6468498 0.02987347 0.09881764 #> [2,] 0.5821253 0.64048586 0.12907652 #> [3,] 0.1217450 0.33748281 0.46598132 psi #>      [,1] [,2] [,3] #> [1,]  0.1  0.0  0.0 #> [2,]  0.0  0.1  0.0 #> [3,]  0.0  0.0  0.1 psi_l #> [[1]] #>           [,1]      [,2]      [,3] #> [1,] 0.3162278 0.0000000 0.0000000 #> [2,] 0.0000000 0.3162278 0.0000000 #> [3,] 0.0000000 0.0000000 0.3162278 nu #> [[1]] #> [1] 0 0 0 lambda #> [[1]] #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 theta #>      [,1] [,2] [,3] #> [1,]  0.2  0.0  0.0 #> [2,]  0.0  0.2  0.0 #> [3,]  0.0  0.0  0.2"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-4-id-random.html","id":"using-the-simssmivary-function-from-the-simstatespace-package-to-simulate-data","dir":"Articles","previous_headings":"Data Generation","what":"Using the SimSSMIVary Function from the simStateSpace Package to Simulate Data","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 4)","text":"","code":"library(simStateSpace) sim <- SimSSMIVary(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l ) data <- as.data.frame(sim) head(data) #>   id time          y1         y2          y3 #> 1  1    0 -0.63437294  0.6021365 -0.91776552 #> 2  1    1 -0.81485487  0.3819811  0.68347267 #> 3  1    2 -0.74662080  0.1263441  0.85777810 #> 4  1    3 -0.50939822 -0.3310262  0.82453806 #> 5  1    4 -0.03333068 -0.4789725 -0.09547539 #> 6  1    5  0.82744597 -0.1903433  1.01685273 plot(sim)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/model-4-id-random.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Fit the Discrete-Time Vector Autoregressive Model By ID (Model 4)","text":"DTVAR function fits DT-VAR model individual ii using byid = TRUE argument.","code":"library(fitDTVARMx) DTVAR(   data = data,   observed = paste0(\"y\", seq_len(k)),   id = \"id\",   model = 4,   byid = TRUE,   ncores = parallel::detectCores() ) #>  #> Means of the estimated paramaters per individual. #>       beta_11       beta_21       beta_31       beta_12       beta_22  #>  6.547278e-01  4.727890e-01 -9.903457e-02  2.619119e-02  6.092642e-01  #>       beta_32       beta_13       beta_23       beta_33       alpha_1  #>  3.930405e-01 -1.021134e-02 -2.623697e-02  4.933279e-01  1.272316e-03  #>       alpha_2       alpha_3        psi_11        psi_21        psi_22  #>  2.105038e-03  2.195758e-03  9.849836e-02  1.676669e-03  9.745999e-02  #>        psi_31        psi_32        psi_33      theta_11      theta_22  #>  5.546903e-04 -9.517665e-05  1.014263e-01  2.011655e-01  2.030307e-01  #>      theta_33  #>  1.954174e-01"},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/session.html","id":"session","dir":"Articles","previous_headings":"","what":"Session","title":"fitDTVARMx: Session","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: Etc/UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] fitDTVARMx_0.0.0.9000    OpenMx_2.21.12           simStateSpace_1.2.2.9000 #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.37      xfun_0.47          Matrix_1.7-0       lattice_0.22-6     #>  [5] glue_1.7.0         knitr_1.48         parallel_4.4.1     RcppParallel_5.1.9 #>  [9] lifecycle_1.0.4    cli_3.6.3.9000     rProject_0.0.14    grid_4.4.1         #> [13] compiler_4.4.1     highr_0.11         tools_4.4.1        evaluate_0.24.0    #> [17] Rcpp_1.0.13        rlang_1.1.4        MASS_7.3-60.2"},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/session.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"fitDTVARMx: Session","text":"","code":"installed.packages()[, c(\"Package\", \"Version\")] #>                   Package             Version       #> fitDTVARMx        \"fitDTVARMx\"        \"0.0.0.9000\"  #> abind             \"abind\"             \"1.4-5\"       #> arm               \"arm\"               \"1.14-4\"      #> arrow             \"arrow\"             \"17.0.0.1\"    #> ash               \"ash\"               \"1.0-15\"      #> AsioHeaders       \"AsioHeaders\"       \"1.22.1-2\"    #> askpass           \"askpass\"           \"1.2.0\"       #> assertthat        \"assertthat\"        \"0.2.1\"       #> backports         \"backports\"         \"1.5.0\"       #> base64enc         \"base64enc\"         \"0.1-3\"       #> betaDelta         \"betaDelta\"         \"1.0.5.9000\"  #> betaMC            \"betaMC\"            \"1.3.2.9000\"  #> betaNB            \"betaNB\"            \"1.0.4.9000\"  #> betaSandwich      \"betaSandwich\"      \"1.0.7.9000\"  #> BH                \"BH\"                \"1.84.0-0\"    #> bibtex            \"bibtex\"            \"0.5.1\"       #> BiocManager       \"BiocManager\"       \"1.30.25\"     #> bit               \"bit\"               \"4.0.5\"       #> bit64             \"bit64\"             \"4.0.5\"       #> bitops            \"bitops\"            \"1.0-8\"       #> blob              \"blob\"              \"1.2.4\"       #> brew              \"brew\"              \"1.0-10\"      #> brio              \"brio\"              \"1.1.5\"       #> broom             \"broom\"             \"1.0.6\"       #> bslib             \"bslib\"             \"0.8.0\"       #> cachem            \"cachem\"            \"1.1.0\"       #> callr             \"callr\"             \"3.7.6\"       #> car               \"car\"               \"3.1-2\"       #> caracas           \"caracas\"           \"2.1.1\"       #> carData           \"carData\"           \"3.0-5\"       #> cellranger        \"cellranger\"        \"1.1.0\"       #> cffr              \"cffr\"              \"1.1.1\"       #> checkmate         \"checkmate\"         \"2.3.2\"       #> cli               \"cli\"               \"3.6.3.9000\"  #> clipr             \"clipr\"             \"0.8.0\"       #> clock             \"clock\"             \"0.7.1\"       #> clusterGeneration \"clusterGeneration\" \"1.3.8\"       #> coda              \"coda\"              \"0.19-4.1\"    #> cOde              \"cOde\"              \"1.1.1\"       #> collections       \"collections\"       \"0.3.7\"       #> colorspace        \"colorspace\"        \"2.1-1\"       #> commonmark        \"commonmark\"        \"1.9.1\"       #> conflicted        \"conflicted\"        \"1.2.0\"       #> corpcor           \"corpcor\"           \"1.6.10\"      #> covr              \"covr\"              \"3.6.4\"       #> cowplot           \"cowplot\"           \"1.1.3\"       #> cpp11             \"cpp11\"             \"0.5.0\"       #> crayon            \"crayon\"            \"1.5.3\"       #> credentials       \"credentials\"       \"2.0.1\"       #> crosstalk         \"crosstalk\"         \"1.2.1\"       #> cTMed             \"cTMed\"             \"0.9.1\"       #> ctsem             \"ctsem\"             \"3.10.1\"      #> curl              \"curl\"              \"5.2.2\"       #> cyclocomp         \"cyclocomp\"         \"1.1.1\"       #> data.table        \"data.table\"        \"1.16.0\"      #> DBI               \"DBI\"               \"1.2.3\"       #> dbplyr            \"dbplyr\"            \"2.5.0\"       #> Deriv             \"Deriv\"             \"4.1.3\"       #> desc              \"desc\"              \"1.4.3\"       #> deSolve           \"deSolve\"           \"1.40\"        #> devtools          \"devtools\"          \"2.4.5.9000\"  #> diagram           \"diagram\"           \"1.6.5\"       #> dials             \"dials\"             \"1.3.0\"       #> DiceDesign        \"DiceDesign\"        \"1.10\"        #> diffobj           \"diffobj\"           \"0.3.5\"       #> digest            \"digest\"            \"0.6.37\"      #> distributional    \"distributional\"    \"0.4.0\"       #> distro            \"distro\"            \"0.1.0\"       #> doBy              \"doBy\"              \"4.6.22\"      #> docopt            \"docopt\"            \"0.7.1\"       #> doFuture          \"doFuture\"          \"1.0.1\"       #> downlit           \"downlit\"           \"0.4.4\"       #> dplyr             \"dplyr\"             \"1.1.4\"       #> DT                \"DT\"                \"0.33\"        #> dtplyr            \"dtplyr\"            \"1.3.1\"       #> duckdb            \"duckdb\"            \"1.0.0-2\"     #> dynr              \"dynr\"              \"0.1.16-106\"  #> dynUtils          \"dynUtils\"          \"0.9.1\"       #> ellipse           \"ellipse\"           \"0.5.0\"       #> ellipsis          \"ellipsis\"          \"0.3.2\"       #> evaluate          \"evaluate\"          \"0.24.0\"      #> expm              \"expm\"              \"1.0-0\"       #> fansi             \"fansi\"             \"1.0.6\"       #> farver            \"farver\"            \"2.1.2\"       #> fastDummies       \"fastDummies\"       \"1.7.4\"       #> fastmap           \"fastmap\"           \"1.2.0\"       #> fclust            \"fclust\"            \"2.1.1.1\"     #> fda               \"fda\"               \"6.1.8\"       #> fdrtool           \"fdrtool\"           \"1.2.18\"      #> fds               \"fds\"               \"1.8\"         #> fitCTVARMx        \"fitCTVARMx\"        \"0.0.0.9000\"  #> fitDTVARMx        \"fitDTVARMx\"        \"0.0.0.9000\"  #> FNN               \"FNN\"               \"1.1.4\"       #> fontawesome       \"fontawesome\"       \"0.5.2\"       #> forcats           \"forcats\"           \"1.0.0\"       #> foreach           \"foreach\"           \"1.5.2\"       #> Formula           \"Formula\"           \"1.2-5\"       #> fs                \"fs\"                \"1.6.4\"       #> fst               \"fst\"               \"0.9.8\"       #> fstcore           \"fstcore\"           \"0.9.18\"      #> furrr             \"furrr\"             \"0.3.1\"       #> future            \"future\"            \"1.34.0\"      #> future.apply      \"future.apply\"      \"1.11.2\"      #> gargle            \"gargle\"            \"1.5.2\"       #> generics          \"generics\"          \"0.1.3\"       #> gert              \"gert\"              \"2.1.1\"       #> ggplot2           \"ggplot2\"           \"3.5.1\"       #> ggrepel           \"ggrepel\"           \"0.9.6\"       #> gh                \"gh\"                \"1.4.1\"       #> gitcreds          \"gitcreds\"          \"0.1.2\"       #> glasso            \"glasso\"            \"1.11\"        #> glmnet            \"glmnet\"            \"4.1-8\"       #> globals           \"globals\"           \"0.16.3\"      #> glue              \"glue\"              \"1.7.0\"       #> googledrive       \"googledrive\"       \"2.1.1\"       #> googlesheets4     \"googlesheets4\"     \"1.1.1\"       #> gower             \"gower\"             \"1.0.1\"       #> GPArotation       \"GPArotation\"       \"2024.3-1\"    #> GPfit             \"GPfit\"             \"1.0-8\"       #> graphicalVAR      \"graphicalVAR\"      \"0.3.4\"       #> gridExtra         \"gridExtra\"         \"2.3\"         #> gsubfn            \"gsubfn\"            \"0.7\"         #> gtable            \"gtable\"            \"0.3.5\"       #> gtools            \"gtools\"            \"3.9.5\"       #> hardhat           \"hardhat\"           \"1.4.0\"       #> haven             \"haven\"             \"2.5.4\"       #> hdrcde            \"hdrcde\"            \"3.4\"         #> here              \"here\"              \"1.0.1\"       #> highr             \"highr\"             \"0.11\"        #> Hmisc             \"Hmisc\"             \"5.1-3\"       #> hms               \"hms\"               \"1.1.3\"       #> htmlTable         \"htmlTable\"         \"2.4.3\"       #> htmltools         \"htmltools\"         \"0.5.8.1\"     #> htmlwidgets       \"htmlwidgets\"       \"1.6.4\"       #> httpgd            \"httpgd\"            \"2.0.2\"       #> httpuv            \"httpuv\"            \"1.6.15\"      #> httr              \"httr\"              \"1.4.7\"       #> httr2             \"httr2\"             \"1.0.3\"       #> ids               \"ids\"               \"1.0.1\"       #> ifaTools          \"ifaTools\"          \"0.23\"        #> igraph            \"igraph\"            \"2.0.3\"       #> infer             \"infer\"             \"1.0.7\"       #> ini               \"ini\"               \"0.3.1\"       #> inline            \"inline\"            \"0.3.19\"      #> ipred             \"ipred\"             \"0.9-15\"      #> isoband           \"isoband\"           \"0.2.7\"       #> iterators         \"iterators\"         \"1.0.14\"      #> jomo              \"jomo\"              \"2.7-6\"       #> jpeg              \"jpeg\"              \"0.1-10\"      #> jquerylib         \"jquerylib\"         \"0.1.4\"       #> jsonlite          \"jsonlite\"          \"1.8.8\"       #> jsonvalidate      \"jsonvalidate\"      \"1.3.2\"       #> kernlab           \"kernlab\"           \"0.9-33\"      #> knitr             \"knitr\"             \"1.48\"        #> ks                \"ks\"                \"1.14.2\"      #> labeling          \"labeling\"          \"0.4.3\"       #> Lahman            \"Lahman\"            \"11.0-0\"      #> languageserver    \"languageserver\"    \"0.3.16\"      #> later             \"later\"             \"1.3.2\"       #> latex2exp         \"latex2exp\"         \"0.9.6\"       #> lava              \"lava\"              \"1.8.0\"       #> lavaan            \"lavaan\"            \"0.6-18\"      #> lazyeval          \"lazyeval\"          \"0.2.2\"       #> lhs               \"lhs\"               \"1.2.0\"       #> lifecycle         \"lifecycle\"         \"1.0.4\"       #> lintr             \"lintr\"             \"3.1.2\"       #> listenv           \"listenv\"           \"0.9.1\"       #> littler           \"littler\"           \"0.3.20\"      #> lme4              \"lme4\"              \"1.1-35.5\"    #> locfit            \"locfit\"            \"1.5-9.10\"    #> longMI            \"longMI\"            \"1.0.0\"       #> loo               \"loo\"               \"2.8.0\"       #> lubridate         \"lubridate\"         \"1.9.3\"       #> magick            \"magick\"            \"2.8.4\"       #> magrittr          \"magrittr\"          \"2.0.3\"       #> markdown          \"markdown\"          \"1.13\"        #> MatrixModels      \"MatrixModels\"      \"0.5-3\"       #> matrixStats       \"matrixStats\"       \"1.4.1\"       #> mclust            \"mclust\"            \"6.1.1\"       #> memoise           \"memoise\"           \"2.0.1\"       #> metaSEM           \"metaSEM\"           \"1.4.0\"       #> metaVAR           \"metaVAR\"           \"0.0.0.9000\"  #> mice              \"mice\"              \"3.16.0\"      #> microbenchmark    \"microbenchmark\"    \"1.5.0\"       #> mime              \"mime\"              \"0.12\"        #> miniUI            \"miniUI\"            \"0.1.1.1\"     #> minqa             \"minqa\"             \"1.2.8\"       #> mitml             \"mitml\"             \"0.4-5\"       #> mize              \"mize\"              \"0.2.4\"       #> mlVAR             \"mlVAR\"             \"0.5.2\"       #> mnormt            \"mnormt\"            \"2.1.1\"       #> modeldata         \"modeldata\"         \"1.4.0\"       #> modelenv          \"modelenv\"          \"0.1.1\"       #> modelr            \"modelr\"            \"0.1.11\"      #> MplusAutomation   \"MplusAutomation\"   \"1.1.1\"       #> multicool         \"multicool\"         \"1.0.1\"       #> munsell           \"munsell\"           \"0.5.1\"       #> mvtnorm           \"mvtnorm\"           \"1.3-1\"       #> nloptr            \"nloptr\"            \"2.1.1\"       #> numDeriv          \"numDeriv\"          \"2016.8-1.1\"  #> nycflights13      \"nycflights13\"      \"1.0.2\"       #> OpenMx            \"OpenMx\"            \"2.21.12\"     #> openssl           \"openssl\"           \"2.2.1\"       #> ordinal           \"ordinal\"           \"2023.12-4.1\" #> pan               \"pan\"               \"1.9\"         #> pander            \"pander\"            \"0.6.5\"       #> parallelly        \"parallelly\"        \"1.38.0\"      #> parsnip           \"parsnip\"           \"1.2.1\"       #> patchwork         \"patchwork\"         \"1.2.0\"       #> pbapply           \"pbapply\"           \"1.7-2\"       #> pbivnorm          \"pbivnorm\"          \"0.6.0\"       #> pbkrtest          \"pbkrtest\"          \"0.5.3\"       #> pcaPP             \"pcaPP\"             \"2.0-5\"       #> pdftools          \"pdftools\"          \"3.4.0\"       #> pillar            \"pillar\"            \"1.9.0\"       #> pkgbuild          \"pkgbuild\"          \"1.4.4\"       #> pkgconfig         \"pkgconfig\"         \"2.0.3\"       #> pkgdown           \"pkgdown\"           \"2.1.0\"       #> pkgload           \"pkgload\"           \"1.4.0\"       #> plogr             \"plogr\"             \"0.2.0\"       #> plyr              \"plyr\"              \"1.8.9\"       #> png               \"png\"               \"0.1-8\"       #> posterior         \"posterior\"         \"1.6.0\"       #> pracma            \"pracma\"            \"2.4.4\"       #> praise            \"praise\"            \"1.0.0\"       #> prettyunits       \"prettyunits\"       \"1.2.0\"       #> printr            \"printr\"            \"0.3\"         #> processx          \"processx\"          \"3.8.4\"       #> prodlim           \"prodlim\"           \"2024.06.25\"  #> profvis           \"profvis\"           \"0.3.8\"       #> progress          \"progress\"          \"1.2.3\"       #> progressr         \"progressr\"         \"0.14.0\"      #> promises          \"promises\"          \"1.3.0\"       #> proto             \"proto\"             \"1.0.0\"       #> ps                \"ps\"                \"1.7.7\"       #> psych             \"psych\"             \"2.4.6.26\"    #> purrr             \"purrr\"             \"1.0.2\"       #> qgraph            \"qgraph\"            \"1.9.8\"       #> qpdf              \"qpdf\"              \"1.3.3\"       #> quadprog          \"quadprog\"          \"1.5-8\"       #> quantreg          \"quantreg\"          \"5.98\"        #> quarto            \"quarto\"            \"1.4.4\"       #> QuickJSR          \"QuickJSR\"          \"1.3.1\"       #> R.cache           \"R.cache\"           \"0.16.0\"      #> R.methodsS3       \"R.methodsS3\"       \"1.8.2\"       #> R.oo              \"R.oo\"              \"1.26.0\"      #> R.utils           \"R.utils\"           \"2.12.3\"      #> R6                \"R6\"                \"2.5.1\"       #> ragg              \"ragg\"              \"1.3.3\"       #> rainbow           \"rainbow\"           \"3.8\"         #> rappdirs          \"rappdirs\"          \"0.3.3\"       #> rbibutils         \"rbibutils\"         \"2.2.16\"      #> rcmdcheck         \"rcmdcheck\"         \"1.4.0\"       #> RColorBrewer      \"RColorBrewer\"      \"1.1-3\"       #> Rcpp              \"Rcpp\"              \"1.0.13\"      #> RcppArmadillo     \"RcppArmadillo\"     \"14.0.0-1\"    #> RcppEigen         \"RcppEigen\"         \"0.3.4.0.2\"   #> RcppGSL           \"RcppGSL\"           \"0.3.13\"      #> RcppParallel      \"RcppParallel\"      \"5.1.9\"       #> RcppTOML          \"RcppTOML\"          \"0.2.2\"       #> RCurl             \"RCurl\"             \"1.98-1.16\"   #> Rdpack            \"Rdpack\"            \"2.6.1\"       #> readr             \"readr\"             \"2.1.5\"       #> readxl            \"readxl\"            \"1.4.3\"       #> recipes           \"recipes\"           \"1.1.0\"       #> RefManageR        \"RefManageR\"        \"1.4.0\"       #> rematch           \"rematch\"           \"2.0.0\"       #> rematch2          \"rematch2\"          \"2.1.2\"       #> remotes           \"remotes\"           \"2.5.0\"       #> reprex            \"reprex\"            \"2.1.1\"       #> reshape2          \"reshape2\"          \"1.4.4\"       #> reticulate        \"reticulate\"        \"1.39.0\"      #> rex               \"rex\"               \"1.2.1\"       #> rhub              \"rhub\"              \"2.0.0\"       #> rjags             \"rjags\"             \"4-16\"        #> rlang             \"rlang\"             \"1.1.4\"       #> RMariaDB          \"RMariaDB\"          \"1.3.2\"       #> rmarkdown         \"rmarkdown\"         \"2.28\"        #> roxygen2          \"roxygen2\"          \"7.3.2\"       #> rpf               \"rpf\"               \"1.0.14\"      #> RPostgres         \"RPostgres\"         \"1.4.7\"       #> rProject          \"rProject\"          \"0.0.14\"      #> rprojroot         \"rprojroot\"         \"2.0.4\"       #> rsample           \"rsample\"           \"1.2.1\"       #> RSQLite           \"RSQLite\"           \"2.3.7\"       #> rstan             \"rstan\"             \"2.32.6\"      #> rstantools        \"rstantools\"        \"2.4.0\"       #> rstudioapi        \"rstudioapi\"        \"0.16.0\"      #> rversions         \"rversions\"         \"2.1.2\"       #> rvest             \"rvest\"             \"1.0.4\"       #> Ryacas            \"Ryacas\"            \"1.1.5\"       #> sass              \"sass\"              \"0.4.9\"       #> scales            \"scales\"            \"1.3.0\"       #> selectr           \"selectr\"           \"0.4-2\"       #> semlbci           \"semlbci\"           \"0.11.2\"      #> semmcci           \"semmcci\"           \"1.1.4.9000\"  #> sessioninfo       \"sessioninfo\"       \"1.2.2\"       #> sfd               \"sfd\"               \"0.1.0\"       #> shape             \"shape\"             \"1.4.6.1\"     #> shiny             \"shiny\"             \"1.9.1\"       #> simStateSpace     \"simStateSpace\"     \"1.2.2.9000\"  #> slider            \"slider\"            \"0.3.1\"       #> snow              \"snow\"              \"0.4-4\"       #> snowfall          \"snowfall\"          \"1.84-6.3\"    #> sourcetools       \"sourcetools\"       \"0.1.7-1\"     #> SparseM           \"SparseM\"           \"1.84-2\"      #> SQUAREM           \"SQUAREM\"           \"2021.1\"      #> StanHeaders       \"StanHeaders\"       \"2.32.10\"     #> statmod           \"statmod\"           \"1.5.0\"       #> stringi           \"stringi\"           \"1.8.4\"       #> stringr           \"stringr\"           \"1.5.1\"       #> styler            \"styler\"            \"1.10.3\"      #> symSEM            \"symSEM\"            \"0.4\"         #> sys               \"sys\"               \"3.4.2\"       #> systemfonts       \"systemfonts\"       \"1.1.0\"       #> tensorA           \"tensorA\"           \"0.36.2.1\"    #> testthat          \"testthat\"          \"3.2.1.9000\"  #> texreg            \"texreg\"            \"1.39.4\"      #> textshaping       \"textshaping\"       \"0.4.0\"       #> tibble            \"tibble\"            \"3.2.1\"       #> tidymodels        \"tidymodels\"        \"1.2.0\"       #> tidyr             \"tidyr\"             \"1.3.1\"       #> tidyselect        \"tidyselect\"        \"1.2.1\"       #> tidyverse         \"tidyverse\"         \"2.0.0\"       #> timechange        \"timechange\"        \"0.3.0\"       #> timeDate          \"timeDate\"          \"4032.109\"    #> tinytex           \"tinytex\"           \"0.52.2\"      #> tune              \"tune\"              \"1.2.1\"       #> tzdb              \"tzdb\"              \"0.4.0\"       #> ucminf            \"ucminf\"            \"1.2.2\"       #> unigd             \"unigd\"             \"0.1.2\"       #> urlchecker        \"urlchecker\"        \"1.0.1\"       #> usethis           \"usethis\"           \"3.0.0\"       #> utf8              \"utf8\"              \"1.2.4\"       #> uuid              \"uuid\"              \"1.2-1\"       #> V8                \"V8\"                \"5.0.0\"       #> vctrs             \"vctrs\"             \"0.6.5\"       #> viridis           \"viridis\"           \"0.6.5\"       #> viridisLite       \"viridisLite\"       \"0.4.2\"       #> vroom             \"vroom\"             \"1.6.5\"       #> waldo             \"waldo\"             \"0.5.3\"       #> warp              \"warp\"              \"0.2.1\"       #> whisker           \"whisker\"           \"0.4.1\"       #> whoami            \"whoami\"            \"1.3.0\"       #> withr             \"withr\"             \"3.0.1\"       #> workflows         \"workflows\"         \"1.1.4\"       #> workflowsets      \"workflowsets\"      \"1.1.0\"       #> xfun              \"xfun\"              \"0.47\"        #> xml2              \"xml2\"              \"1.3.6\"       #> xmlparsedata      \"xmlparsedata\"      \"1.0.5\"       #> xopen             \"xopen\"             \"1.0.1\"       #> xtable            \"xtable\"            \"1.8-4\"       #> yaml              \"yaml\"              \"2.3.10\"      #> yardstick         \"yardstick\"         \"1.3.1\"       #> zip               \"zip\"               \"2.3.1\"       #> base              \"base\"              \"4.4.1\"       #> boot              \"boot\"              \"1.3-30\"      #> class             \"class\"             \"7.3-22\"      #> cluster           \"cluster\"           \"2.1.6\"       #> codetools         \"codetools\"         \"0.2-20\"      #> compiler          \"compiler\"          \"4.4.1\"       #> datasets          \"datasets\"          \"4.4.1\"       #> foreign           \"foreign\"           \"0.8-86\"      #> graphics          \"graphics\"          \"4.4.1\"       #> grDevices         \"grDevices\"         \"4.4.1\"       #> grid              \"grid\"              \"4.4.1\"       #> KernSmooth        \"KernSmooth\"        \"2.23-24\"     #> lattice           \"lattice\"           \"0.22-6\"      #> MASS              \"MASS\"              \"7.3-60.2\"    #> Matrix            \"Matrix\"            \"1.7-0\"       #> methods           \"methods\"           \"4.4.1\"       #> mgcv              \"mgcv\"              \"1.9-1\"       #> nlme              \"nlme\"              \"3.1-164\"     #> nnet              \"nnet\"              \"7.3-19\"      #> parallel          \"parallel\"          \"4.4.1\"       #> rpart             \"rpart\"             \"4.1.23\"      #> spatial           \"spatial\"           \"7.3-17\"      #> splines           \"splines\"           \"4.4.1\"       #> stats             \"stats\"             \"4.4.1\"       #> stats4            \"stats4\"            \"4.4.1\"       #> survival          \"survival\"          \"3.6-4\"       #> tcltk             \"tcltk\"             \"4.4.1\"       #> tools             \"tools\"             \"4.4.1\"       #> utils             \"utils\"             \"4.4.1\""},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/session.html","id":"cpu","dir":"Articles","previous_headings":"","what":"CPU","title":"fitDTVARMx: Session","text":"","code":"#> Architecture:                       x86_64 #> CPU op-mode(s):                     32-bit, 64-bit #> Address sizes:                      46 bits physical, 48 bits virtual #> Byte Order:                         Little Endian #> CPU(s):                             8 #> On-line CPU(s) list:                0-7 #> Vendor ID:                          GenuineIntel #> Model name:                         Intel(R) Xeon(R) CPU E5-1620 v2 @ 3.70GHz #> CPU family:                         6 #> Model:                              62 #> Thread(s) per core:                 2 #> Core(s) per socket:                 4 #> Socket(s):                          1 #> Stepping:                           4 #> CPU max MHz:                        3900.0000 #> CPU min MHz:                        1200.0000 #> BogoMIPS:                           7382.45 #> Flags:                              fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm cpuid_fault epb pti ssbd ibrs ibpb stibp tpr_shadow flexpriority ept vpid fsgsbase smep erms xsaveopt dtherm ida arat pln pts vnmi md_clear flush_l1d #> Virtualization:                     VT-x #> L1d cache:                          128 KiB (4 instances) #> L1i cache:                          128 KiB (4 instances) #> L2 cache:                           1 MiB (4 instances) #> L3 cache:                           10 MiB (1 instance) #> NUMA node(s):                       1 #> NUMA node0 CPU(s):                  0-7 #> Vulnerability Gather data sampling: Not affected #> Vulnerability Itlb multihit:        KVM: Mitigation: VMX disabled #> Vulnerability L1tf:                 Mitigation; PTE Inversion; VMX conditional cache flushes, SMT vulnerable #> Vulnerability Mds:                  Mitigation; Clear CPU buffers; SMT vulnerable #> Vulnerability Meltdown:             Mitigation; PTI #> Vulnerability Mmio stale data:      Unknown: No mitigations #> Vulnerability Retbleed:             Not affected #> Vulnerability Spec rstack overflow: Not affected #> Vulnerability Spec store bypass:    Mitigation; Speculative Store Bypass disabled via prctl #> Vulnerability Spectre v1:           Mitigation; usercopy/swapgs barriers and __user pointer sanitization #> Vulnerability Spectre v2:           Mitigation; Retpolines, IBPB conditional, IBRS_FW, STIBP conditional, RSB filling, PBRSB-eIBRS Not affected #> Vulnerability Srbds:                Not affected #> Vulnerability Tsx async abort:      Not affected"},{"path":"https://github.com/jeksterslab/fitDTVARMx/articles/session.html","id":"memory","dir":"Articles","previous_headings":"","what":"Memory","title":"fitDTVARMx: Session","text":"","code":"#>                total        used        free      shared  buff/cache   available #> Mem:            11Gi       5.7Gi       3.1Gi       146Mi       2.6Gi       5.3Gi #> Swap:          7.8Gi       647Mi       7.2Gi #> Total:          19Gi       6.3Gi        10Gi"},{"path":"https://github.com/jeksterslab/fitDTVARMx/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ivan Jacob Agaloos Pesigan. Author, maintainer, copyright holder.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pesigan, . J. . (2024). fitDTVARMx: Fit Discrete-Time Vector Autoregressive Model. R package version 0.0.0.9000. https://github.com/jeksterslab/fitDTVARMx","code":"@Manual{,   author = {Ivan Jacob Agaloos Pesigan},   title = {fitDTVARMx: Fit the Discrete-Time Vector Autoregressive Model},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":"https://github.com/jeksterslab/fitDTVARMx/index.html","id":"fitdtvarmx","dir":"","previous_headings":"","what":"Fit the Discrete-Time Vector Autoregressive Model","title":"Fit the Discrete-Time Vector Autoregressive Model","text":"Ivan Jacob Agaloos Pesigan 2024-09-21","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Fit the Discrete-Time Vector Autoregressive Model","text":"Fit discrete-time vector autoregressive model using OpenMx package.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fit the Discrete-Time Vector Autoregressive Model","text":"can install released version fitDTVARMx GitHub :","code":"if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"jeksterslab/fitDTVARMx\")"},{"path":"https://github.com/jeksterslab/fitDTVARMx/index.html","id":"more-information","dir":"","previous_headings":"","what":"More Information","title":"Fit the Discrete-Time Vector Autoregressive Model","text":"See GitHub Pages package documentation.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/DTVAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the First-Order Discrete-Time Vector Autoregressive Model — DTVAR","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — DTVAR","text":"Fit First-Order Discrete-Time Vector Autoregressive Model","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/DTVAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — DTVAR","text":"","code":"DTVAR(   data,   observed,   id,   byid = FALSE,   model = 1,   try = 1000,   ncores = NULL,   ... )"},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/DTVAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — DTVAR","text":"data Data frame. data frame object data potentially multiple subjects contain column subject ID numbers (.e., ID variable), least one column observed values. observed Character vector. vector character strings names observed variables data. id Character string. character string name ID variable data. byid Logical. byid = TRUE, fit model id. model Model number (1, 2, 3, 4). See Details model description. try Positive integer. Number extra optimization tries. ncores Positive integer. Number cores use. ... Additional optional arguments pass mxTryHardctsem.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/DTVAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — DTVAR","text":"Returns object class dtvaridmx byid = TRUE dtvarmx byid = FALSE. returned object list following elements: call Function call. args List function arguments. fun Function used (\"FitDTVARIDMx\" byid = TRUE \"FitDTVARMx\" byid = FALSE). output list fitted OpenMx models byid = TRUE single fitted OpenMx model byid = FALSE.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/DTVAR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — DTVAR","text":"Note mean covariance matrix initial condition fixed null vector identity matrix, resprectively. DTVAR() function fits four versions first-order discrete-time vector autoregressive model. Use FitDTVARIDMx() FitDTVARMx() functions control model specification.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/DTVAR.html","id":"model-","dir":"Reference","previous_headings":"","what":"Model 1","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — DTVAR","text":"measurement model given $$   \\mathbf{y}_{, t}   =   \\boldsymbol{\\eta}_{, t} $$ \\(\\mathbf{y}_{, t}\\) represents vector observed variables \\(\\boldsymbol{\\eta}_{, t}\\) vector latent variables individual \\(\\) time \\(t\\). dynamic structure given $$   \\boldsymbol{\\eta}_{, t}   =   \\boldsymbol{\\beta}   \\boldsymbol{\\eta}_{, t - 1}   +   \\boldsymbol{\\zeta}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\zeta}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Psi}   \\right) $$ \\(\\boldsymbol{\\eta}_{, t}\\), \\(\\boldsymbol{\\eta}_{, t - 1}\\), \\(\\boldsymbol{\\zeta}_{, t}\\) random variables, \\(\\boldsymbol{\\beta}\\), \\(\\boldsymbol{\\Psi}\\) model parameters. , \\(\\boldsymbol{\\eta}_{, t}\\) vector latent variables time \\(t\\) individual \\(\\), \\(\\boldsymbol{\\eta}_{, t - 1}\\) represents vector latent variables time \\(t - 1\\) individual \\(\\), \\(\\boldsymbol{\\zeta}_{, t}\\) represents vector dynamic noise time \\(t\\) individual \\(\\). \\(\\boldsymbol{\\beta}\\) denotes matrix autoregression cross regression coefficients, \\(\\boldsymbol{\\Psi}\\) covariance matrix \\(\\boldsymbol{\\zeta}_{, t}\\). model, \\(\\boldsymbol{\\Psi}\\) diagonal matrix.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/DTVAR.html","id":"model--1","dir":"Reference","previous_headings":"","what":"Model 2","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — DTVAR","text":"measurement model given $$   \\mathbf{y}_{, t}   =   \\boldsymbol{\\Lambda}   \\boldsymbol{\\eta}_{, t}   +   \\boldsymbol{\\varepsilon}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\varepsilon}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Theta}   \\right) $$ \\(\\mathbf{y}_{, t}\\), \\(\\boldsymbol{\\eta}_{, t}\\), \\(\\boldsymbol{\\varepsilon}_{, t}\\) random variables \\(\\boldsymbol{\\Lambda}\\), \\(\\boldsymbol{\\Theta}\\) model parameters. \\(\\mathbf{y}_{, t}\\) represents vector observed random variables, \\(\\boldsymbol{\\eta}_{, t}\\) vector latent random variables, \\(\\boldsymbol{\\varepsilon}_{, t}\\) vector random measurement errors, time \\(t\\) individual \\(\\). \\(\\boldsymbol{\\Lambda}\\) denotes matrix factor loadings, \\(\\boldsymbol{\\Theta}\\) covariance matrix \\(\\boldsymbol{\\varepsilon}\\). model, \\(\\boldsymbol{\\Lambda}\\) identity matrix \\(\\boldsymbol{\\Theta}\\) diagonal matrix. dynamic structure given $$   \\boldsymbol{\\eta}_{, t}   =   \\boldsymbol{\\beta}   \\boldsymbol{\\eta}_{, t - 1}   +   \\boldsymbol{\\zeta}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\zeta}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Psi}   \\right) $$ \\(\\boldsymbol{\\eta}_{, t}\\), \\(\\boldsymbol{\\eta}_{, t - 1}\\), \\(\\boldsymbol{\\zeta}_{, t}\\) random variables, \\(\\boldsymbol{\\beta}\\), \\(\\boldsymbol{\\Psi}\\) model parameters. , \\(\\boldsymbol{\\eta}_{, t}\\) vector latent variables time \\(t\\) individual \\(\\), \\(\\boldsymbol{\\eta}_{, t - 1}\\) represents vector latent variables time \\(t - 1\\) individual \\(\\), \\(\\boldsymbol{\\zeta}_{, t}\\) represents vector dynamic noise time \\(t\\) individual \\(\\). \\(\\boldsymbol{\\beta}\\) denotes matrix autoregression cross regression coefficients, \\(\\boldsymbol{\\Psi}\\) covariance matrix \\(\\boldsymbol{\\zeta}_{, t}\\). model, \\(\\boldsymbol{\\Psi}\\) diagonal matrix.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/DTVAR.html","id":"model--2","dir":"Reference","previous_headings":"","what":"Model 3","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — DTVAR","text":"measurement model given $$   \\mathbf{y}_{, t}   =   \\boldsymbol{\\Lambda}   \\boldsymbol{\\eta}_{, t}   +   \\boldsymbol{\\varepsilon}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\varepsilon}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Theta}   \\right) $$ \\(\\mathbf{y}_{, t}\\), \\(\\boldsymbol{\\eta}_{, t}\\), \\(\\boldsymbol{\\varepsilon}_{, t}\\) random variables \\(\\boldsymbol{\\Lambda}\\), \\(\\boldsymbol{\\Theta}\\) model parameters. \\(\\mathbf{y}_{, t}\\) represents vector observed random variables, \\(\\boldsymbol{\\eta}_{, t}\\) vector latent random variables, \\(\\boldsymbol{\\varepsilon}_{, t}\\) vector random measurement errors, time \\(t\\) individual \\(\\). \\(\\boldsymbol{\\Lambda}\\) denotes matrix factor loadings, \\(\\boldsymbol{\\Theta}\\) covariance matrix \\(\\boldsymbol{\\varepsilon}\\). model, \\(\\boldsymbol{\\Lambda}\\) identity matrix \\(\\boldsymbol{\\Theta}\\) diagonal matrix. dynamic structure given $$   \\boldsymbol{\\eta}_{, t}   =   \\boldsymbol{\\alpha}   +   \\boldsymbol{\\beta}   \\boldsymbol{\\eta}_{, t - 1}   +   \\boldsymbol{\\zeta}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\zeta}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Psi}   \\right) $$ \\(\\boldsymbol{\\eta}_{, t}\\), \\(\\boldsymbol{\\eta}_{, t - 1}\\), \\(\\boldsymbol{\\zeta}_{, t}\\) random variables, \\(\\boldsymbol{\\alpha}\\), \\(\\boldsymbol{\\beta}\\), \\(\\boldsymbol{\\Psi}\\) model parameters. , \\(\\boldsymbol{\\eta}_{, t}\\) vector latent variables time \\(t\\) individual \\(\\), \\(\\boldsymbol{\\eta}_{, t - 1}\\) represents vector latent variables time \\(t - 1\\) individual \\(\\), \\(\\boldsymbol{\\zeta}_{, t}\\) represents vector dynamic noise time \\(t\\) individual \\(\\). \\(\\boldsymbol{\\alpha}\\) denotes vector intercepts, \\(\\boldsymbol{\\beta}\\) matrix autoregression cross regression coefficients, \\(\\boldsymbol{\\Psi}\\) covariance matrix \\(\\boldsymbol{\\zeta}_{, t}\\). model, \\(\\boldsymbol{\\Psi}\\) diagonal matrix.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/DTVAR.html","id":"model--3","dir":"Reference","previous_headings":"","what":"Model 4","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — DTVAR","text":"Model 4 similar Model 3 except \\(\\boldsymbol{\\Psi}\\) symmetric matrix Model 4.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/DTVAR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — DTVAR","text":"Hunter, M. D. (2017). State space modeling open source, modular, structural equation modeling environment. Structural Equation Modeling: Multidisciplinary Journal, 25(2), 307–324. doi:10.1080/10705511.2017.1369354 Neale, M. C., Hunter, M. D., Pritikin, J. N., Zahery, M., Brick, T. R., Kirkpatrick, R. M., Estabrook, R., Bates, T. C., Maes, H. H., & Boker, S. M. (2015). OpenMx 2.0: Extended structural equation statistical modeling. Psychometrika, 81(2), 535–549. doi:10.1007/s11336-014-9435-8","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/DTVAR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — DTVAR","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/DTVAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — DTVAR","text":"","code":"if (FALSE) { # \\dontrun{ # --------------------------------------------------------------------------- # byid = FALSE # --------------------------------------------------------------------------- # Generate data using the simStateSpace package------------------------------ set.seed(42) sim <- simStateSpace::SimSSMVARFixed(   n = 5,   time = 100,   mu0 = rep(x = 0, times = 3),   sigma0_l = t(chol(diag(3))),   alpha = rep(x = 0, times = 3),   beta = matrix(     data = c(       0.7, 0.5, -0.1,       0.0, 0.6, 0.4,       0, 0, 0.5     ),     nrow = 3   ),   psi_l = t(chol(diag(3))) ) data <- as.data.frame(sim)  # Fit the model-------------------------------------------------------------- library(fitDTVARMx) fit <- DTVAR(   data = data,   observed = c(\"y1\", \"y2\", \"y3\"),   id = \"id\",   byid = FALSE ) print(fit) summary(fit) coef(fit) vcov(fit)  # --------------------------------------------------------------------------- # byid = TRUE # --------------------------------------------------------------------------- # Generate data using the simStateSpace package------------------------------ set.seed(42) beta_mu <- matrix(   data = c(     0.7, 0.5, -0.1,     0.0, 0.6, 0.4,     0, 0, 0.5   ),   nrow = 3 ) beta_sigma <- diag(3 * 3) beta <- simStateSpace::SimBetaN(   n = 5,   beta = beta_mu,   vcov_beta_vec_l = t(chol(beta_sigma)) ) sim <- simStateSpace::SimSSMVARIVary(   n = 5,   time = 100,   mu0 = list(rep(x = 0, times = 3)),   sigma0_l = list(t(chol(diag(3)))),   alpha = list(rep(x = 0, times = 3)),   beta = beta,   psi_l = list(t(chol(diag(3)))) ) data <- as.data.frame(sim)  # Fit the model-------------------------------------------------------------- library(fitDTVARMx) fit <- DTVAR(   data = data,   observed = c(\"y1\", \"y2\", \"y3\"),   id = \"id\",   byid = TRUE ) print(fit) summary(fit) coef(fit) vcov(fit) } # }"},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/FitDTVARIDMx.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the First-Order Discrete-Time Vector Autoregressive Model by ID — FitDTVARIDMx","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model by ID — FitDTVARIDMx","text":"Fit First-Order Discrete-Time Vector Autoregressive Model ID","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/FitDTVARIDMx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model by ID — FitDTVARIDMx","text":"","code":"FitDTVARIDMx(   data,   observed,   id,   alpha_fixed = TRUE,   alpha_values = NULL,   alpha_free = NULL,   alpha_lbound = NULL,   alpha_ubound = NULL,   beta_values = NULL,   beta_free = NULL,   beta_lbound = NULL,   beta_ubound = NULL,   psi_diag = TRUE,   psi_values = NULL,   psi_free = NULL,   psi_lbound = NULL,   psi_ubound = NULL,   theta_fixed = TRUE,   theta_values = NULL,   theta_free = NULL,   theta_lbound = NULL,   theta_ubound = NULL,   mu0_fixed = TRUE,   mu0_values = NULL,   mu0_free = NULL,   mu0_lbound = NULL,   mu0_ubound = NULL,   sigma0_fixed = TRUE,   sigma0_diag = TRUE,   sigma0_values = NULL,   sigma0_free = NULL,   sigma0_lbound = NULL,   sigma0_ubound = NULL,   try = 1000,   ncores = NULL,   ... )"},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/FitDTVARIDMx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model by ID — FitDTVARIDMx","text":"data Data frame. data frame object data potentially multiple subjects contain column subject ID numbers (.e., ID variable), least one column observed values. observed Character vector. vector character strings names observed variables data. id Character string. character string name ID variable data. alpha_fixed Logical. alpha_fixed = TRUE, dynamic model intercept vector alpha fixed zero. alpha_fixed = FALSE, dynamic model intercept vector alpha estimated. alpha_values Optional starting values alpha. alpha_fixed = TRUE, alpha_values used fixed values. alpha_fixed = FALSE, alpha_values used starting values. alpha_free Optional logical vector representing free parameters alpha. alpha_lbound Optional lower bound alpha. Ignored alpha_fixed = TRUE. alpha_ubound Optional upper bound alpha. Ignored alpha_fixed = TRUE. beta_values Numeric matrix. Optional starting values beta. beta_free Optional logical matrix representing free parameters beta. beta_lbound Numeric matrix. Optional lower bound beta. beta_ubound Numeric matrix. Optional upper bound beta. psi_diag Logical. psi_diag = TRUE, psi diagonal matrix. psi_values Numeric matrix. Optional starting values psi. psi_free Optional logical matrix representing free parameters psi. psi_lbound Numeric matrix. Optional lower bound psi. psi_ubound Optional upper bound psi. theta_fixed Logical. theta_fixed = TRUE, measurement error matrix theta fixed zero. theta_fixed = FALSE, estimate diagonal measurement error matrix theta. theta_values Optional starting values theta. Ignored theta_fixed = TRUE. theta_free Optional logical matrix representing free parameters theta. theta_lbound Optional lower bound theta. Ignored theta_fixed = TRUE. theta_ubound Optional upper bound theta. Ignored theta_fixed = TRUE. mu0_fixed Logical. mu0_fixed = TRUE, initial mean vector mu0 fixed. mu0_fixed = FALSE, initial mean vector mu0 estimated. mu0_values Optional starting values mu0. mu0_fixed = TRUE, mu0_values used fixed values. mu0_fixed = FALSE, mu0_values used starting values. mu0_free Optional logical vector representing free parameters mu0. mu0_lbound Optional lower bound mu0. Ignored mu0_fixed = TRUE. mu0_ubound Optional upper bound mu0. Ignored mu0_fixed = TRUE. sigma0_fixed Logical. sigma0_fixed = TRUE, initial mean vector sigma0 fixed. sigma0_fixed = FALSE, initial mean vector sigma0 estimated. sigma0_diag Logical. sigma0_diag = TRUE, sigma0 diagonal matrix. sigma0_values Optional starting values sigma0. sigma0_fixed = TRUE, sigma0_values used fixed values. sigma0_fixed = FALSE, sigma0_values used starting values. sigma0_free Optional logical matrix representing free parameters sigma0. sigma0_lbound Optional lower bound sigma0. Ignored sigma0_fixed = TRUE. sigma0_ubound Optional upper bound sigma0. Ignored sigma0_fixed = TRUE. try Positive integer. Number extra optimization tries. ncores Positive integer. Number cores use. ... Additional optional arguments pass mxTryHardctsem.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/FitDTVARIDMx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model by ID — FitDTVARIDMx","text":"Returns object class dtvaridmx list following elements: call Function call. args List function arguments. fun Function used (\"FitDTVARIDMx\"). output list fitted OpenMx models.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/FitDTVARIDMx.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model by ID — FitDTVARIDMx","text":"Hunter, M. D. (2017). State space modeling open source, modular, structural equation modeling environment. Structural Equation Modeling: Multidisciplinary Journal, 25(2), 307–324. doi:10.1080/10705511.2017.1369354 Neale, M. C., Hunter, M. D., Pritikin, J. N., Zahery, M., Brick, T. R., Kirkpatrick, R. M., Estabrook, R., Bates, T. C., Maes, H. H., & Boker, S. M. (2015). OpenMx 2.0: Extended structural equation statistical modeling. Psychometrika, 81(2), 535–549. doi:10.1007/s11336-014-9435-8","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/FitDTVARIDMx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model by ID — FitDTVARIDMx","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/FitDTVARIDMx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model by ID — FitDTVARIDMx","text":"","code":"if (FALSE) { # \\dontrun{ # Generate data using the simStateSpace package------------------------------ set.seed(42) beta_mu <- matrix(   data = c(     0.7, 0.5, -0.1,     0.0, 0.6, 0.4,     0, 0, 0.5   ),   nrow = 3 ) beta_sigma <- diag(3 * 3) beta <- simStateSpace::SimBetaN(   n = 5,   beta = beta_mu,   vcov_beta_vec_l = t(chol(beta_sigma)) ) sim <- simStateSpace::SimSSMVARIVary(   n = 5,   time = 100,   mu0 = list(rep(x = 0, times = 3)),   sigma0_l = list(t(chol(diag(3)))),   alpha = list(rep(x = 0, times = 3)),   beta = beta,   psi_l = list(t(chol(diag(3)))) ) data <- as.data.frame(sim)  # Fit the model-------------------------------------------------------------- library(fitDTVARMx) fit <- FitDTVARIDMx(   data = data,   observed = c(\"y1\", \"y2\", \"y3\"),   id = \"id\" ) print(fit) summary(fit) coef(fit) vcov(fit) } # }"},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/FitDTVARMx.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the First-Order Discrete-Time Vector Autoregressive Model — FitDTVARMx","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — FitDTVARMx","text":"Fit First-Order Discrete-Time Vector Autoregressive Model","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/FitDTVARMx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — FitDTVARMx","text":"","code":"FitDTVARMx(   data,   observed,   id,   alpha_fixed = TRUE,   alpha_values = NULL,   alpha_free = NULL,   alpha_lbound = NULL,   alpha_ubound = NULL,   beta_values = NULL,   beta_free = NULL,   beta_lbound = NULL,   beta_ubound = NULL,   psi_diag = TRUE,   psi_values = NULL,   psi_free = NULL,   psi_lbound = NULL,   psi_ubound = NULL,   theta_fixed = TRUE,   theta_values = NULL,   theta_free = NULL,   theta_lbound = NULL,   theta_ubound = NULL,   mu0_fixed = TRUE,   mu0_values = NULL,   mu0_free = NULL,   mu0_lbound = NULL,   mu0_ubound = NULL,   sigma0_fixed = TRUE,   sigma0_diag = TRUE,   sigma0_values = NULL,   sigma0_free = NULL,   sigma0_lbound = NULL,   sigma0_ubound = NULL,   try = 1000,   ncores = NULL,   ... )"},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/FitDTVARMx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — FitDTVARMx","text":"data Data frame. data frame object data potentially multiple subjects contain column subject ID numbers (.e., ID variable), least one column observed values. observed Character vector. vector character strings names observed variables data. id Character string. character string name ID variable data. alpha_fixed Logical. alpha_fixed = TRUE, dynamic model intercept vector alpha fixed zero. alpha_fixed = FALSE, dynamic model intercept vector alpha estimated. alpha_values Optional starting values alpha. alpha_fixed = TRUE, alpha_values used fixed values. alpha_fixed = FALSE, alpha_values used starting values. alpha_free Optional logical vector representing free parameters alpha. alpha_lbound Optional lower bound alpha. Ignored alpha_fixed = TRUE. alpha_ubound Optional upper bound alpha. Ignored alpha_fixed = TRUE. beta_values Numeric matrix. Optional starting values beta. beta_free Optional logical matrix representing free parameters beta. beta_lbound Numeric matrix. Optional lower bound beta. beta_ubound Numeric matrix. Optional upper bound beta. psi_diag Logical. psi_diag = TRUE, psi diagonal matrix. psi_values Numeric matrix. Optional starting values psi. psi_free Optional logical matrix representing free parameters psi. psi_lbound Numeric matrix. Optional lower bound psi. psi_ubound Optional upper bound psi. theta_fixed Logical. theta_fixed = TRUE, measurement error matrix theta fixed zero. theta_fixed = FALSE, estimate diagonal measurement error matrix theta. theta_values Optional starting values theta. Ignored theta_fixed = TRUE. theta_free Optional logical matrix representing free parameters theta. theta_lbound Optional lower bound theta. Ignored theta_fixed = TRUE. theta_ubound Optional upper bound theta. Ignored theta_fixed = TRUE. mu0_fixed Logical. mu0_fixed = TRUE, initial mean vector mu0 fixed. mu0_fixed = FALSE, initial mean vector mu0 estimated. mu0_values Optional starting values mu0. mu0_fixed = TRUE, mu0_values used fixed values. mu0_fixed = FALSE, mu0_values used starting values. mu0_free Optional logical vector representing free parameters mu0. mu0_lbound Optional lower bound mu0. Ignored mu0_fixed = TRUE. mu0_ubound Optional upper bound mu0. Ignored mu0_fixed = TRUE. sigma0_fixed Logical. sigma0_fixed = TRUE, initial mean vector sigma0 fixed. sigma0_fixed = FALSE, initial mean vector sigma0 estimated. sigma0_diag Logical. sigma0_diag = TRUE, sigma0 diagonal matrix. sigma0_values Optional starting values sigma0. sigma0_fixed = TRUE, sigma0_values used fixed values. sigma0_fixed = FALSE, sigma0_values used starting values. sigma0_free Optional logical matrix representing free parameters sigma0. sigma0_lbound Optional lower bound sigma0. Ignored sigma0_fixed = TRUE. sigma0_ubound Optional upper bound sigma0. Ignored sigma0_fixed = TRUE. try Positive integer. Number extra optimization tries. ncores Positive integer. Number cores use. ... Additional optional arguments pass mxTryHardctsem.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/FitDTVARMx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — FitDTVARMx","text":"Returns object class dtvarmx list following elements: call Function call. args List function arguments. fun Function used (\"FitDTVARMx\"). output fitted OpenMx model.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/FitDTVARMx.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — FitDTVARMx","text":"Hunter, M. D. (2017). State space modeling open source, modular, structural equation modeling environment. Structural Equation Modeling: Multidisciplinary Journal, 25(2), 307–324. doi:10.1080/10705511.2017.1369354 Neale, M. C., Hunter, M. D., Pritikin, J. N., Zahery, M., Brick, T. R., Kirkpatrick, R. M., Estabrook, R., Bates, T. C., Maes, H. H., & Boker, S. M. (2015). OpenMx 2.0: Extended structural equation statistical modeling. Psychometrika, 81(2), 535–549. doi:10.1007/s11336-014-9435-8","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/FitDTVARMx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — FitDTVARMx","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/FitDTVARMx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit the First-Order Discrete-Time Vector Autoregressive Model — FitDTVARMx","text":"","code":"if (FALSE) { # \\dontrun{ # Generate data using the simStateSpace package------------------------------ set.seed(42) sim <- simStateSpace::SimSSMVARFixed(   n = 5,   time = 100,   mu0 = rep(x = 0, times = 3),   sigma0_l = t(chol(diag(3))),   alpha = rep(x = 0, times = 3),   beta = matrix(     data = c(       0.7, 0.5, -0.1,       0.0, 0.6, 0.4,       0, 0, 0.5     ),     nrow = 3   ),   psi_l = t(chol(diag(3))) ) data <- as.data.frame(sim)  # Fit the model-------------------------------------------------------------- library(fitDTVARMx) fit <- FitDTVARMx(   data = data,   observed = c(\"y1\", \"y2\", \"y3\"),   id = \"id\" ) print(fit) summary(fit) coef(fit) vcov(fit) } # }"},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/coef.dtvaridmx.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Estimates — coef.dtvaridmx","title":"Parameter Estimates — coef.dtvaridmx","text":"Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/coef.dtvaridmx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Estimates — coef.dtvaridmx","text":"","code":"# S3 method for class 'dtvaridmx' coef(object, alpha = FALSE, psi = FALSE, theta = FALSE, ...)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/coef.dtvaridmx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Estimates — coef.dtvaridmx","text":"object Object class dtvaridmx. alpha Logical. alpha = TRUE, include estimates alpha vector, available. alpha = FALSE, exclude estimates alpha vector. psi Logical. psi = TRUE, include estimates psi matrix, available. psi = FALSE, exclude estimates psi matrix. theta Logical. theta = TRUE, include estimates theta matrix, available. theta = FALSE, exclude estimates theta matrix. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/coef.dtvaridmx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Estimates — coef.dtvaridmx","text":"Returns list vectors parameter estimates.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/coef.dtvaridmx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parameter Estimates — coef.dtvaridmx","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/coef.dtvarmx.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Estimates — coef.dtvarmx","title":"Parameter Estimates — coef.dtvarmx","text":"Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/coef.dtvarmx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Estimates — coef.dtvarmx","text":"","code":"# S3 method for class 'dtvarmx' coef(object, alpha = FALSE, psi = FALSE, theta = FALSE, ...)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/coef.dtvarmx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Estimates — coef.dtvarmx","text":"object Object class dtvarmx. alpha Logical. alpha = TRUE, include estimates alpha vector, available. alpha = FALSE, exclude estimates alpha vector. psi Logical. psi = TRUE, include estimates psi matrix, available. psi = FALSE, exclude estimates psi matrix. theta Logical. theta = TRUE, include estimates theta matrix, available. theta = FALSE, exclude estimates theta matrix. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/coef.dtvarmx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Estimates — coef.dtvarmx","text":"Returns vector parameter estimates.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/coef.dtvarmx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parameter Estimates — coef.dtvarmx","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/fitDTVARMx-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fitDTVARMx: Fit the Discrete-Time Vector Autoregressive Model — fitDTVARMx-package","title":"fitDTVARMx: Fit the Discrete-Time Vector Autoregressive Model — fitDTVARMx-package","text":"Fit discrete-time vector autoregressive model using 'OpenMx' package.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/fitDTVARMx-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fitDTVARMx: Fit the Discrete-Time Vector Autoregressive Model — fitDTVARMx-package","text":"Maintainer: Ivan Jacob Agaloos Pesigan r.jeksterslab@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/print.dtvaridmx.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Object of Class dtvaridmx — print.dtvaridmx","title":"Print Method for Object of Class dtvaridmx — print.dtvaridmx","text":"Print Method Object Class dtvaridmx","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/print.dtvaridmx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Object of Class dtvaridmx — print.dtvaridmx","text":"","code":"# S3 method for class 'dtvaridmx' print(x, means = TRUE, ...)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/print.dtvaridmx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Object of Class dtvaridmx — print.dtvaridmx","text":"x object class dtvaridmx. means Logical. means = TRUE, return means. Otherwise, function returns raw estimates. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/print.dtvaridmx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Method for Object of Class dtvaridmx — print.dtvaridmx","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/print.dtvarmx.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Object of Class dtvarmx — print.dtvarmx","title":"Print Method for Object of Class dtvarmx — print.dtvarmx","text":"Print Method Object Class dtvarmx","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/print.dtvarmx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Object of Class dtvarmx — print.dtvarmx","text":"","code":"# S3 method for class 'dtvarmx' print(x, ...)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/print.dtvarmx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Object of Class dtvarmx — print.dtvarmx","text":"x object class dtvarmx. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/print.dtvarmx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Method for Object of Class dtvarmx — print.dtvarmx","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/summary.dtvaridmx.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for Object of Class dtvaridmx — summary.dtvaridmx","title":"Summary Method for Object of Class dtvaridmx — summary.dtvaridmx","text":"Summary Method Object Class dtvaridmx","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/summary.dtvaridmx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Method for Object of Class dtvaridmx — summary.dtvaridmx","text":"","code":"# S3 method for class 'dtvaridmx' summary(object, means = TRUE, ...)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/summary.dtvaridmx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for Object of Class dtvaridmx — summary.dtvaridmx","text":"object object class dtvaridmx. means Logical. means = TRUE, return means. Otherwise, function returns raw estimates. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/summary.dtvaridmx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary Method for Object of Class dtvaridmx — summary.dtvaridmx","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/summary.dtvarmx.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for Object of Class dtvarmx — summary.dtvarmx","title":"Summary Method for Object of Class dtvarmx — summary.dtvarmx","text":"Summary Method Object Class dtvarmx","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/summary.dtvarmx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Method for Object of Class dtvarmx — summary.dtvarmx","text":"","code":"# S3 method for class 'dtvarmx' summary(object, ...)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/summary.dtvarmx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for Object of Class dtvarmx — summary.dtvarmx","text":"object object class dtvarmx. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/summary.dtvarmx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary Method for Object of Class dtvarmx — summary.dtvarmx","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/vcov.dtvaridmx.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling Covariance Matrix of the Parameter Estimates — vcov.dtvaridmx","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.dtvaridmx","text":"Sampling Covariance Matrix Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/vcov.dtvaridmx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.dtvaridmx","text":"","code":"# S3 method for class 'dtvaridmx' vcov(object, alpha = FALSE, psi = FALSE, theta = FALSE, ...)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/vcov.dtvaridmx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.dtvaridmx","text":"object Object class dtvaridmx. alpha Logical. alpha = TRUE, include estimates alpha vector, available. alpha = FALSE, exclude estimates alpha vector. psi Logical. psi = TRUE, include estimates psi matrix, available. psi = FALSE, exclude estimates psi matrix. theta Logical. theta = TRUE, include estimates theta matrix, available. theta = FALSE, exclude estimates theta matrix. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/vcov.dtvaridmx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.dtvaridmx","text":"Returns list sampling variance-covariance matrices.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/vcov.dtvaridmx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.dtvaridmx","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/vcov.dtvarmx.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling Covariance Matrix of the Parameter Estimates — vcov.dtvarmx","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.dtvarmx","text":"Sampling Covariance Matrix Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/vcov.dtvarmx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.dtvarmx","text":"","code":"# S3 method for class 'dtvarmx' vcov(object, alpha = FALSE, psi = FALSE, theta = FALSE, ...)"},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/vcov.dtvarmx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.dtvarmx","text":"object Object class dtvarmx. alpha Logical. alpha = TRUE, include estimates alpha vector, available. alpha = FALSE, exclude estimates alpha vector. psi Logical. psi = TRUE, include estimates psi matrix, available. psi = FALSE, exclude estimates psi matrix. theta Logical. theta = TRUE, include estimates theta matrix, available. theta = FALSE, exclude estimates theta matrix. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/vcov.dtvarmx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.dtvarmx","text":"Returns list sampling variance-covariance matrices.","code":""},{"path":"https://github.com/jeksterslab/fitDTVARMx/reference/vcov.dtvarmx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.dtvarmx","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":[]}]

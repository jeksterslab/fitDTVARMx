% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitDTVARMx-fit-dt-var-id-mx.R
\name{FitDTVARIDMx}
\alias{FitDTVARIDMx}
\title{Fit the First-Order Discrete-Time Vector Autoregressive Model by ID}
\usage{
FitDTVARIDMx(
  data,
  observed,
  id,
  alpha_fixed = TRUE,
  alpha_values = NULL,
  alpha_free = NULL,
  alpha_lbound = NULL,
  alpha_ubound = NULL,
  beta_values = NULL,
  beta_free = NULL,
  beta_lbound = NULL,
  beta_ubound = NULL,
  psi_diag = TRUE,
  psi_values = NULL,
  psi_free = NULL,
  psi_lbound = NULL,
  psi_ubound = NULL,
  theta_fixed = TRUE,
  theta_values = NULL,
  theta_free = NULL,
  theta_lbound = NULL,
  theta_ubound = NULL,
  mu0_fixed = TRUE,
  mu0_values = NULL,
  mu0_free = NULL,
  mu0_lbound = NULL,
  mu0_ubound = NULL,
  sigma0_fixed = TRUE,
  sigma0_diag = TRUE,
  sigma0_values = NULL,
  sigma0_free = NULL,
  sigma0_lbound = NULL,
  sigma0_ubound = NULL,
  try = 1000,
  ncores = NULL,
  ...
)
}
\arguments{
\item{data}{Data frame.
A data frame object of data for potentially
multiple subjects that contain
a column of subject ID numbers
(i.e., an ID variable), and
at least one column of observed values.}

\item{observed}{Character vector.
A vector of character strings
of the names of the observed variables in the data.}

\item{id}{Character string.
A character string of the name of the ID variable in the data.}

\item{alpha_fixed}{Logical.
If \code{alpha_fixed = TRUE},
the dynamic model intercept vector \code{alpha} is fixed at zero.
If \code{alpha_fixed = FALSE},
the dynamic model intercept vector \code{alpha} is estimated.}

\item{alpha_values}{Optional starting values for \code{alpha}.
If \code{alpha_fixed = TRUE},
\code{alpha_values} will be used as fixed values.
If \code{alpha_fixed = FALSE},
\code{alpha_values} will be used as starting values.}

\item{alpha_free}{Optional logical vector
representing free parameters for \code{alpha}.}

\item{alpha_lbound}{Optional lower bound for \code{alpha}.
Ignored if \code{alpha_fixed = TRUE}.}

\item{alpha_ubound}{Optional upper bound for \code{alpha}.
Ignored if \code{alpha_fixed = TRUE}.}

\item{beta_values}{Numeric matrix.
Optional starting values for \code{beta}.}

\item{beta_free}{Optional logical matrix
representing free parameters for \code{beta}.}

\item{beta_lbound}{Numeric matrix.
Optional lower bound for \code{beta}.}

\item{beta_ubound}{Numeric matrix.
Optional upper bound for \code{beta}.}

\item{psi_diag}{Logical.
If \code{psi_diag = TRUE},
\code{psi} is a diagonal matrix.}

\item{psi_values}{Numeric matrix.
Optional starting values for \code{psi}.}

\item{psi_free}{Optional logical matrix
representing free parameters for \code{psi}.}

\item{psi_lbound}{Numeric matrix.
Optional lower bound for \code{psi}.}

\item{psi_ubound}{Optional upper bound for \code{psi}.}

\item{theta_fixed}{Logical.
If \code{theta_fixed = TRUE},
the measurement error matrix \code{theta} is fixed to zero.
If \code{theta_fixed = FALSE},
estimate the diagonal measurement error matrix \code{theta}.}

\item{theta_values}{Optional starting values for \code{theta}.
Ignored if \code{theta_fixed = TRUE}.}

\item{theta_free}{Optional logical matrix
representing free parameters for \code{theta}.}

\item{theta_lbound}{Optional lower bound for \code{theta}.
Ignored if \code{theta_fixed = TRUE}.}

\item{theta_ubound}{Optional upper bound for \code{theta}.
Ignored if \code{theta_fixed = TRUE}.}

\item{mu0_fixed}{Logical.
If \code{mu0_fixed = TRUE},
initial mean vector \code{mu0} is fixed.
If \code{mu0_fixed = FALSE},
initial mean vector \code{mu0} is estimated.}

\item{mu0_values}{Optional starting values for \code{mu0}.
If \code{mu0_fixed = TRUE},
\code{mu0_values} will be used as fixed values.
If \code{mu0_fixed = FALSE},
\code{mu0_values} will be used as starting values.}

\item{mu0_free}{Optional logical vector
representing free parameters for \code{mu0}.}

\item{mu0_lbound}{Optional lower bound for \code{mu0}.
Ignored if \code{mu0_fixed = TRUE}.}

\item{mu0_ubound}{Optional upper bound for \code{mu0}.
Ignored if \code{mu0_fixed = TRUE}.}

\item{sigma0_fixed}{Logical.
If \code{sigma0_fixed = TRUE},
initial mean vector \code{sigma0} is fixed.
If \code{sigma0_fixed = FALSE},
initial mean vector \code{sigma0} is estimated.}

\item{sigma0_diag}{Logical.
If \code{sigma0_diag = TRUE},
\code{sigma0} is a diagonal matrix.}

\item{sigma0_values}{Optional starting values for \code{sigma0}.
If \code{sigma0_fixed = TRUE},
\code{sigma0_values} will be used as fixed values.
If \code{sigma0_fixed = FALSE},
\code{sigma0_values} will be used as starting values.}

\item{sigma0_free}{Optional logical matrix
representing free parameters for \code{sigma0}.}

\item{sigma0_lbound}{Optional lower bound for \code{sigma0}.
Ignored if \code{sigma0_fixed = TRUE}.}

\item{sigma0_ubound}{Optional upper bound for \code{sigma0}.
Ignored if \code{sigma0_fixed = TRUE}.}

\item{try}{Positive integer.
Number of extra optimization tries.}

\item{ncores}{Positive integer.
Number of cores to use.}

\item{...}{Additional optional arguments to pass to \code{mxTryHardctsem}.}
}
\value{
Returns an object of class \code{fitdtvaridmx} which is
a list with the following elements:
\describe{
\item{call}{Function call.}
\item{args}{List of function arguments.}
\item{fun}{Function used ("FitDTVARIDMx").}
\item{output}{A list of fitted OpenMx models.}
}
}
\description{
Fit the First-Order Discrete-Time Vector Autoregressive Model by ID
}
\examples{
\dontrun{
# Generate data using the simStateSpace package------------------------------
set.seed(42)
beta_mu <- matrix(
  data = c(
    0.7, 0.5, -0.1,
    0.0, 0.6, 0.4,
    0, 0, 0.5
  ),
  nrow = 3
)
beta_sigma <- diag(3 * 3)
beta <- simStateSpace::SimBetaN(
  n = 5,
  beta = beta_mu,
  vcov_beta_vec_l = t(chol(beta_sigma))
)
sim <- simStateSpace::SimSSMVARIVary(
  n = 5,
  time = 100,
  mu0 = list(rep(x = 0, times = 3)),
  sigma0_l = list(t(chol(diag(3)))),
  alpha = list(rep(x = 0, times = 3)),
  beta = beta,
  psi_l = list(t(chol(diag(3))))
)
data <- as.data.frame(sim)

# Fit the model--------------------------------------------------------------
library(fitDTVARMx)
fit <- FitDTVARIDMx(
  data = data,
  observed = c("y1", "y2", "y3"),
  id = "id"
)
print(fit)
summary(fit)
coef(fit)
vcov(fit)
}

}
\references{
Hunter, M. D. (2017).
State space modeling in an open source, modular,
structural equation modeling environment.
\emph{Structural Equation Modeling: A Multidisciplinary Journal},
\emph{25}(2), 307–324.
\doi{10.1080/10705511.2017.1369354}

Neale, M. C., Hunter, M. D., Pritikin, J. N.,
Zahery, M., Brick, T. R., Kirkpatrick, R. M., Estabrook, R.,
Bates, T. C., Maes, H. H., & Boker, S. M. (2015).
OpenMx 2.0: Extended structural equation and statistical modeling.
\emph{Psychometrika},
\emph{81}(2), 535–549.
\doi{10.1007/s11336-014-9435-8}
}
\seealso{
Other DTVAR Functions: 
\code{\link{DTVAR}()},
\code{\link{FitDTVARMx}()}
}
\author{
Ivan Jacob Agaloos Pesigan
}
\concept{DTVAR Functions}
\keyword{fit}
\keyword{fitDTVARMx}
